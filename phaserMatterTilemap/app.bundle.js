!function(t){function e(e){for(var n,r,a=e[0],l=e[1],c=e[2],d=0,h=[];d<a.length;d++)r=a[d],Object.prototype.hasOwnProperty.call(o,r)&&o[r]&&h.push(o[r][0]),o[r]=0;for(n in l)Object.prototype.hasOwnProperty.call(l,n)&&(t[n]=l[n]);for(u&&u(e);h.length;)h.shift()();return s.push.apply(s,c||[]),i()}function i(){for(var t,e=0;e<s.length;e++){for(var i=s[e],n=!0,a=1;a<i.length;a++){var l=i[a];0!==o[l]&&(n=!1)}n&&(s.splice(e--,1),t=r(r.s=i[0]))}return t}var n={},o={0:0},s=[];function r(e){if(n[e])return n[e].exports;var i=n[e]={i:e,l:!1,exports:{}};return t[e].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=t,r.c=n,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="";var a=window.webpackJsonp=window.webpackJsonp||[],l=a.push.bind(a);a.push=e,a=a.slice();for(var c=0;c<a.length;c++)e(a[c]);var u=l;s.push([5,1]),i()}([function(t,e,i){"use strict";var n;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.BOOT_SCENE="BootScene",t.GAME_SCENE="GameScene",t.MENU_SCENE="MenuScene",t.PRELOAD_SCENE="PreloadScene"}(n||(n={})),e.default=n},function(t){t.exports=JSON.parse('{"playerAnims":{"idle":{"key":"player-idle","start":0,"end":3,"frameRate":3,"repeat":-1},"run":{"key":"player-run","start":8,"end":15,"frameRate":12,"repeat":-1}},"resources":{"BootScene":{"image":[["loadingBar","assets/images/preloader-bar.png"]]},"PreloadScene":{"tilemapTiledJSON":[["map","assets/tilemaps/level.json"]],"image":[["background","assets/images/nebula.jpg"],["stars","assets/images/stars.png"],["tileset-extruded","assets/tilesets/tileset-extruded.png"],["wooden-plank","assets/images/wooden-plank.png"],["block","assets/images/block.png"]],"spritesheet":[["player","assets/spritesheets/omnibot.png",{"frameWidth":32,"frameHeight":32,"margin":1,"spacing":2}]],"atlas":[],"audio":[["collect","assets/audio/collect.ogg"],["explosion","assets/audio/explosion.ogg"],["laser","assets/audio/laser.mp3"],["asteroidExplosion","assets/audio/asteroidExplosion.mp3"]]}}}')},function(t,e,i){"use strict";var n;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.BEFORE_UPDATE="beforeupdate",t.COLLISION_START="collisionstart",t.COLLISION_END="collisionend",t.COLLISION_ACTIVE="collisionactive",t.UPDATE="update",t.SHUTDOWN="shutdown",t.DESTROY="destroy",t.START="start",t.CAMERA_FADE_OUT_COMPLETE="camerafadeoutcomplete"}(n||(n={})),e.default=n},,function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=i(1),o=function(){function t(){}return t.prototype.load=function(t){var e=t.scene.key,i=n.resources[e];if(i){var o=function(e){i[e].forEach((function(i){var n;(n=t.load)[e].apply(n,i)}))};for(var s in i)o(s)}},t}();e.default=new o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.game=void 0;var n=i(3),o=i(0),s=i(6),r=i(7),a=i(15),l=i(17);o.default.GAME_SCENE;var c={title:"space",scene:[s.default,l.default,a.default,r.default],type:n.AUTO,scale:{width:1920,height:1080},physics:{default:"matter",matter:{debug:!0}},parent:"game",backgroundColor:"#000c1f"};e.game=new n.Game(c);var u=function(){var t=window.innerWidth,i=window.innerHeight,n=Math.min(t/1920,i/1080),o=Math.min(t/n,2560),s=Math.min(i/n,1440),r=1,a=function(t,e,i){return(t-e)/(i-e)};r=1920/1080<t/i?-a(o/s,1920/1080,2560/1080)/(1/(1.15-1))+1.15:-a(o/s,1920/1080,1920/1440)/(1/(1.15-1))+1.15,e.game.scale.resize(o*r,s*r),e.game.canvas.style.width=o*n+"px",e.game.canvas.style.height=s*n+"px",e.game.canvas.style.marginTop=(i-s*n)/2+"px",e.game.canvas.style.marginLeft=(t-o*n)/2+"px"};window.onresize=u,window.addEventListener("load",(function(){return u()}))},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var s=i(0),r=i(4),a=function(t){function e(){return t.call(this,{key:s.default.BOOT_SCENE})||this}return o(e,t),e.prototype.preload=function(){r.default.load(this)},e.prototype.create=function(){this.scene.start(s.default.PRELOAD_SCENE)},e}(Phaser.Scene);e.default=a},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var s=i(8),r=i(11),a=i(12),l=i(2),c=i(0),u=i(13),d=i(14),h=function(t){function e(){return t.call(this,{key:c.default.GAME_SCENE})||this}return o(e,t),e.prototype.create=function(){this.map=this.make.tilemap({key:u.default.MAP});var t=this.map.addTilesetImage(u.default.TILESET_EXTRUDED),e=this.map.createDynamicLayer(u.default.GROUND,t,0,0),i=this.map.createDynamicLayer(u.default.LAVA,t,0,0);this.map.createDynamicLayer(u.default.BACKGROUND,t,0,0),this.map.createDynamicLayer(u.default.FOREGROUND,t,0,0).setDepth(10),e.setCollisionByProperty({collides:!0}),i.setCollisionByProperty({collides:!0}),this.matter.world.convertTilemapLayer(e),this.matter.world.convertTilemapLayer(i),this.cameras.main.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels),this.matter.world.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels),this.matterCollision=new d.default(this,new Phaser.Plugins.PluginManager(this.scene.scene.game));var n=this.map.findObject(u.default.SPAWN,(function(t){return t.name===u.default.SPAWN_POINT}));this.player=new s.default(this,a.default.PLAYER,n.x,n.y),this.cameras.main.startFollow(this.player.sprite,!1,.5,.5),this.unsubscribePlayerCollide=this.matterCollision.addOnCollideStart([this.player.sprite],[],this.onPlayerCollide,this),this.map&&(this.createMapObjects(),this.createMapSensors())},e.prototype.createMapSensors=function(){var t=this.map.findObject(u.default.SENSORS,(function(t){return t.name===u.default.CELEBRАTION})),e=this.matter.add.rectangle(t.x+t.width/2,t.y+t.height/2,t.width,t.height,{isSensor:!0,isStatic:!0});this.unsubscribeCelebration=this.matterCollision.addOnCollideStart([this.player.sprite],[e],this.onPlayerWin,this)},e.prototype.createMapObjects=function(){var t=this;this.map.getObjectLayer(u.default.CRATES).objects.forEach((function(e){var i=e.x,n=e.y,o=e.width,s=e.height;t.matter.add.image(i+o/2,n-s/2,a.default.BLOCK).setBody("rectangle")})),this.map.getObjectLayer(u.default.PLATFORM_LOCATIONS).objects.forEach((function(e){new r.default(t.scene.scene,a.default.WOODEN_PLANK,e.x,e.y)}))},e.prototype.onPlayerWin=function(){this.unsubscribeCelebration();var t=this.map.findObject(u.default.SENSORS,(function(t){return t.name===u.default.CELEBRАTION}));this.scene.scene.add.text(t.x,t.y,"You finish the level")},e.prototype.onPlayerCollide=function(t){var e=this,i=(t.bodyA,t.bodyB,t.gameObjectA,t.gameObjectB);t.pair;i&&i instanceof Phaser.Tilemaps.Tile&&(i.properties.isLethal&&(this.unsubscribePlayerCollide(),this.player.freeze(),this.cameras.main.fade(250,0,0,0),this.cameras.main.once(l.default.CAMERA_FADE_OUT_COMPLETE,(function(){return e.scene.restart()}))))},e.prototype.update=function(){},e}(Phaser.Scene);e.default=h},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n,o=i(9),s=i(2),r=i(10),a=(i(1),function(){function t(t,e,i,n){this.spriteName=e,this.canJump=!0,this.destroed=!1,this.isTouching={top:!1,bottom:!1,left:!1,right:!1},this.scene=t,r.default.createAnims(t,e),this.sprite=t.matter.add.sprite(0,0,e,0),this.sensors=this.createPlayerSensors(this.sprite.width,this.sprite.height);var a=this.createPlayerBody(this.sensors);this.sprite.setExistingBody(a),this.sprite.setScale(2),this.sprite.setFixedRotation(),this.sprite.setPosition(i,n);var l=Phaser.Input.Keyboard.KeyCodes,c=l.LEFT,u=l.RIGHT,d=l.UP,h=l.D,p=l.W,f=l.A,y={up:[d,p,l.SPACE],left:[c,f],right:[u,h]};this.input=new o.default(t,y),t.events.on(s.default.UPDATE,this.update,this),t.matter.world.on(s.default.BEFORE_UPDATE,this.resetTouching,this),t.events.once(s.default.SHUTDOWN,this.destroy,this),t.events.once(s.default.DESTROY,this.destroy,this),this.addCollisions()}return t.prototype.removeCollisions=function(){var t=[this.sensors.bottom,this.sensors.top,this.sensors.left,this.sensors.right];this.scene.matterCollision.removeOnCollideStart(t,[],this.onSensorCollide,this),this.scene.matterCollision.removeOnCollideActive(t,[],this.onSensorCollide,this)},t.prototype.addCollisions=function(){var t=[this.sensors.bottom,this.sensors.top,this.sensors.left,this.sensors.right];this.scene.matterCollision.addOnCollideStart(t,[],this.onSensorCollide,this),this.scene.matterCollision.addOnCollideActive(t,[],this.onSensorCollide,this)},t.prototype.onSensorCollide=function(t){var e=t.bodyA,i=t.bodyB,n=(t.gameObjectA,t.gameObjectB,t.pair);i.isSensor||(e===this.sensors.left?(this.isTouching.left=!0,n.separation>.5&&(this.sprite.x+=n.separation-.5)):e===this.sensors.right?(this.isTouching.right=!0,n.separation>.5&&(this.sprite.x-=n.separation-.5)):e===this.sensors.bottom?this.isTouching.bottom=!0:e===this.sensors.top&&(this.isTouching.top=!0))},t.prototype.resetTouching=function(){for(var t in this.isTouching)this.isTouching[t]=!1},t.prototype.createPlayerSensors=function(t,e){var i=this.scene.matter.bodies;return{main:i.rectangle(0,0,.6*t,e,{chamfer:{radius:10}}),bottom:i.rectangle(0,.5*e,.25*t,2,{isSensor:!0}),top:i.rectangle(0,.5*-e,.25*t,2,{isSensor:!0}),left:i.rectangle(.35*-t,0,2,.5*e,{isSensor:!0}),right:i.rectangle(.35*t,0,2,.5*e,{isSensor:!0})}},t.prototype.createPlayerBody=function(t){return this.scene.matter.body.create({parts:[t.main,t.bottom,t.top,t.left,t.right],frictionStatic:0,frictionAir:.02,friction:.1})},t.prototype.freeze=function(){this.sprite.setStatic(!0)},t.prototype.destroy=function(){this.destroed=!0,this.scene.events.off(s.default.UPDATE,this.update,this),this.scene.events.off(s.default.SHUTDOWN,this.destroy,this),this.scene.events.off(s.default.DESTROY,this.destroy,this),this.scene.matter.world&&this.scene.matter.world.off(s.default.BEFORE_UPDATE,this.resetTouching,this),this.removeCollisions(),this.jumpTimer&&this.jumpTimer.destroy(),this.sprite.destroy()},t.prototype.update=function(){if(!this.destroed){var t=this.sprite,e=t.body.velocity,i=this.input.right.isDown(),o=this.input.left.isDown(),s=this.input.up.isDown(),r=this.isTouching.bottom,a=r?.01:.007;o?(t.setFlipX(!0),t.applyForce(new Phaser.Math.Vector2(-a,0))):i&&(t.setFlipX(!1),t.applyForce(new Phaser.Math.Vector2(a,0))),e.x>7?t.setVelocityX(7):e.x<-7&&t.setVelocityX(-7),s&&this.canJump&&r&&(t.setVelocityY(-11),this.canJump=!1),s||(this.canJump=!0),r?0!==t.body.force.x?t.anims.play(this.spriteName+"-"+n.RUN,!0):t.anims.play(this.spriteName+"-"+n.IDLE,!0):(t.anims.stop(),t.setTexture(this.spriteName,10))}},t}());e.default=a,function(t){t.RUN="run",t.IDLE="idle"}(n||(n={}))},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){var i=this;Object.keys(e).forEach((function(n){Array.isArray(e[n])||(e[n]=[e[n]]);var o=e[n].map((function(e){return t.input.keyboard.addKey(e)}));i[n]=i.createKeys(o)}))}return t.prototype.createKeys=function(t){return{isDown:function(){return t.some((function(t){return t.isDown}))},isUp:function(){return t.every((function(t){return t.isUp}))},keys:t}},t}();e.default=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=i(1),o=function(){function t(){}return t.prototype.createAnims=function(t,e){var i=n[e+"Anims"],o=t.anims;if(i&&o)for(var s in i){var r=i[s],a=r.key,l=r.start,c=r.end,u=r.frameRate,d=r.repeat;o.create({key:a,frames:o.generateFrameNumbers(e,{start:l,end:c}),frameRate:u,repeat:d})}},t}();e.default=new o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(t,e,i,n,o){void 0===o&&(o=5),this.scene=t,this.platform=t.add.tileSprite(i,n,64*o,18,e),t.matter.add.gameObject(this.platform,{friction:.2,frictionAir:.05,restitution:0,density:5e-4});var s=new Phaser.Physics.Matter.MatterPhysics(t).constraint.create({pointA:{x:this.platform.x,y:this.platform.y},bodyB:this.platform.body,length:0});t.matter.world.add(s);var r=(Math.random()<.5?-1:1)*Phaser.Math.Between(15,25);this.platform.setAngle(r)};e.default=n},function(t,e,i){"use strict";var n;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.PLAYER="player",t.BLOCK="block",t.WOODEN_PLANK="wooden-plank"}(n||(n={})),e.default=n},function(t,e,i){"use strict";var n;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.MAP="map",t.TILESET_EXTRUDED="tileset-extruded",t.SPAWN="Spawn",t.SPAWN_POINT="Spawn Point",t.CRATES="Crates",t.LAVA="Lava",t.GROUND="Ground",t.BACKGROUND="Background",t.FOREGROUND="Foreground",t.SENSORS="Sensors",t["CELEBRАTION"]="Celebration",t.PLATFORM_LOCATIONS="Platform Locations",t.SWING_LOCATIONS="Swing Locations"}(n||(n={})),e.default=n},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var s=i(2),r=function(t){function e(e,i){var n=t.call(this,e,i)||this;return n.events=new Phaser.Events.EventEmitter,n.collisionActiveListeners=new Map,n.collisionEndListeners=new Map,n.collisionStartListeners=new Map,n.onCollisionStart=n.onCollisionEvent.bind(n,n.collisionStartListeners,s.default.COLLISION_START),n.onCollisionEnd=n.onCollisionEvent.bind(n,n.collisionEndListeners,s.default.COLLISION_END),n.onCollisionActive=n.onCollisionEvent.bind(n,n.collisionActiveListeners,s.default.COLLISION_ACTIVE),n.scene.events.once(s.default.DESTROY,n.destroy,n),n.start(),n}return o(e,t),e.prototype.start=function(){this.scene.events.off(s.default.SHUTDOWN,this.shutdown,this),this.scene.events.on(s.default.SHUTDOWN,this.shutdown,this),this.subscribePhaserEvents()},e.prototype.shutdown=function(){this.removeAllColliderListeners(),this.unsubscribePhaserEvents(),this.scene.events.once(s.default.START,this.start,this)},e.prototype.addOnCollideStart=function(t,e,i,n){return this.addOnCollide(this.collisionStartListeners,t,e,i,n),this.removeOnCollideStart.bind(this,t,e,i,n)},e.prototype.addOnCollideEnd=function(t,e,i,n){return this.addOnCollide(this.collisionEndListeners,t,e,i,n),this.removeOnCollideEnd.bind(this,t,e,i,n)},e.prototype.addOnCollideActive=function(t,e,i,n){return this.addOnCollide(this.collisionActiveListeners,t,e,i,n),this.removeOnCollideActive.bind(this,t,e,i,n)},e.prototype.removeOnCollideActive=function(t,e,i,n){this.removeOnCollide(this.collisionActiveListeners,t,e,i,n)},e.prototype.removeOnCollideEnd=function(t,e,i,n){this.removeOnCollide(this.collisionEndListeners,t,e,i,n)},e.prototype.removeOnCollideStart=function(t,e,i,n){this.removeOnCollide(this.collisionStartListeners,t,e,i,n)},e.prototype.destroy=function(){this.scene.events.off(s.default.START,this.start,this),this.scene.events.off(s.default.SHUTDOWN,this.shutdown,this),this.removeAllColliderListeners(),this.unsubscribePhaserEvents(),this.scene=void 0},e.prototype.onCollisionEvent=function(t,e,i){var n=this,o=i.pairs,s="pair"+e;o.map((function(r,a){var l=r.bodyA,c=r.bodyB,u=n.getRootBody(l).gameObject,d=n.getRootBody(c).gameObject;u&&u.tile&&(u=u.tile),d&&d.tile&&(d=d.tile),o[a].gameObjectA=u,o[a].gameObjectB=d;var h={bodyA:l,bodyB:c,gameObjectA:u,gameObjectB:d,pair:r};if(n.events.emit(s,h),t.size){var p={bodyA:c,bodyB:l,gameObjectA:d,gameObjectB:u,pair:r,isReversed:!0};n.chechPairAndEmit(t,l,c,d,h),n.chechPairAndEmit(t,c,l,u,p),u&&n.chechPairAndEmit(t,u,c,d,h),d&&n.chechPairAndEmit(t,d,u,u,p)}n.events.emit(e,i)}))},e.prototype.chechPairAndEmit=function(t,e,i,n,o){var s=t.get(e);s&&s.forEach((function(t){var e=t.target,s=t.context,r=t.callback;e&&e!==i&&e!==n||(s?r.call(s,o):r(o))}))},e.prototype.removeOnCollide=function(t,e,i,n,o){e.forEach((function(e){if(0===i.length)t.delete(e);else{var s=(t.get(e)||[]).filter((function(t){return!(i.includes(t.target)&&(!n||t.callback===n)&&(!o||t.context===o))}));s.length>0?t.set(e,s):t.delete(e)}}))},e.prototype.addOnCollide=function(t,e,i,n,o){var s=this;0===i.length&&i.push(void 0),e.forEach((function(e){i.forEach((function(i){s.addOnCollideObjectVsObject(t,e,i,n,o)}))}))},e.prototype.addOnCollideObjectVsObject=function(t,e,i,n,o){var s=t.get(e)||[];s.push({target:i,callback:n,context:o}),t.set(e,s)},e.prototype.removeAllColliderListeners=function(){this.collisionStartListeners.clear(),this.collisionActiveListeners.clear(),this.collisionEndListeners.clear()},e.prototype.subscribePhaserEvents=function(){var t=this.scene.matter;t&&t.world?(t.world.on(s.default.COLLISION_START,this.onCollisionStart),t.world.on(s.default.COLLISION_END,this.onCollisionEnd),t.world.on(s.default.COLLISION_ACTIVE,this.onCollisionActive)):console.warn("Plugin requires matter!")},e.prototype.unsubscribePhaserEvents=function(){var t=this.scene.matter;t&&t.world&&(t.world.off(s.default.COLLISION_START,this.onCollisionStart),t.world.off(s.default.COLLISION_END,this.onCollisionEnd),t.world.off(s.default.COLLISION_ACTIVE,this.onCollisionActive))},e.prototype.getRootBody=function(t){for(;t.parent!=t;)t=t.parent;return t},e}(Phaser.Plugins.ScenePlugin);e.default=r},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var s=i(0),r=i(16),a=function(t){function e(){return t.call(this,{key:s.default.MENU_SCENE})||this}return o(e,t),e.prototype.create=function(){this.bg=this.add.tileSprite(0,0,this.sys.canvas.width,this.sys.canvas.height,"background").setOrigin(0);var t=this.add.text(0,0,r.default.TAP_TO_PLAY,{font:"30px Arial",fill:"#fff",align:"center"});t.setPosition(this.sys.canvas.width/2-t.width/2,this.sys.canvas.height/2-t.height/2)},e.prototype.update=function(){this.input.activePointer.isDown&&this.scene.start(s.default.GAME_SCENE),this.bg.tilePositionY-=.5,this.scene.start(s.default.GAME_SCENE)},e}(Phaser.Scene);e.default=a},function(t,e,i){"use strict";var n;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.LOADING_COMPLETE="Loading complete",t.TAP_TO_PLAY="Tap to play",t.HIGH_SCORE="High score"}(n||(n={})),e.default=n},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var s=i(0),r=i(4),a=function(t){function e(){return t.call(this,{key:s.default.PRELOAD_SCENE})||this}return o(e,t),e.prototype.preload=function(){var t=this;this.loadingBar=this.add.sprite(0,0,"loadingBar").setOrigin(0,0),Phaser.Display.Align.In.Center(this.loadingBar,this.add.zone(this.sys.canvas.width/2,this.sys.canvas.height/2,this.sys.canvas.width,this.sys.canvas.height)),this.load.on("progress",(function(e){return t.loadingBar.setScale(e,1).setOrigin(0,0)})),r.default.load(this)},e.prototype.create=function(){this.scene.start(s.default.MENU_SCENE)},e}(Phaser.Scene);e.default=a}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnN0L1NjZW5lS2V5cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uc3QvUGhhc2VyRXZlbnRzLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9SZXNvdXJjZUxvYWRlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjZW5lcy9Cb290U2NlbmUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjZW5lcy9HYW1lU2NlbmUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvUGxheWVyLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9NdWx0eUtleXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL1V0aWxzLnRzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1JvdGF0aW5QbGF0Zm9ybS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uc3QvSW1hZ2VLZXlzLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25zdC9UaWxlS2V5cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvUGhhc2VyTWF0dGVyQ29sbGlzaW9uUGx1Z2luLnRzIiwid2VicGFjazovLy8uL3NyYy9zY2VuZXMvTWVudVNjZW5lLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25zdC9Mb2NhbFRleHRzLnRzIiwid2VicGFjazovLy8uL3NyYy9zY2VuZXMvUHJlbG9hZFNjZW5lLnRzIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJleGVjdXRlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMCIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwiU2NlbmVLZXlzIiwiUGhhc2VyRXZlbnRzIiwiZ2FtZUNvbmZpZyIsImxvYWQiLCJzY2VuZSIsInNjZW5lTmFtZSIsInJlc291cmNlcyIsImVsIiwiZm9yRWFjaCIsInJlcyIsIlJlc291cmNlTG9hZGVyIiwiR0FNRV9TQ0VORSIsInRpdGxlIiwidHlwZSIsIlBoYXNlciIsIkFVVE8iLCJzY2FsZSIsIndpZHRoIiwiaGVpZ2h0IiwicGh5c2ljcyIsImRlZmF1bHQiLCJtYXR0ZXIiLCJkZWJ1ZyIsInBhcmVudCIsImJhY2tncm91bmRDb2xvciIsImdhbWUiLCJHYW1lIiwib25SZXNpemUiLCJ3IiwiaW5uZXJXaWR0aCIsImgiLCJpbm5lckhlaWdodCIsIk1hdGgiLCJtaW4iLCJuZXdXaWR0aCIsIm5ld0hlaWdodCIsInNtb290aCIsIm5vcm1hbGl6ZSIsIm1heCIsInJlc2l6ZSIsImNhbnZhcyIsInN0eWxlIiwibWFyZ2luVG9wIiwibWFyZ2luTGVmdCIsIm9ucmVzaXplIiwiYWRkRXZlbnRMaXN0ZW5lciIsIkJPT1RfU0NFTkUiLCJwcmVsb2FkIiwidGhpcyIsInN0YXJ0IiwiUFJFTE9BRF9TQ0VORSIsIlNjZW5lIiwibWFwIiwibWFrZSIsInRpbGVtYXAiLCJNQVAiLCJ0aWxlc2V0IiwiYWRkVGlsZXNldEltYWdlIiwiVElMRVNFVF9FWFRSVURFRCIsImdyb3VuZExheWVyIiwiY3JlYXRlRHluYW1pY0xheWVyIiwiR1JPVU5EIiwibGF2YUxheWVyIiwiTEFWQSIsIkJBQ0tHUk9VTkQiLCJGT1JFR1JPVU5EIiwic2V0RGVwdGgiLCJzZXRDb2xsaXNpb25CeVByb3BlcnR5IiwiY29sbGlkZXMiLCJ3b3JsZCIsImNvbnZlcnRUaWxlbWFwTGF5ZXIiLCJjYW1lcmFzIiwibWFpbiIsInNldEJvdW5kcyIsIndpZHRoSW5QaXhlbHMiLCJoZWlnaHRJblBpeGVscyIsIm1hdHRlckNvbGxpc2lvbiIsIlBsdWdpbnMiLCJQbHVnaW5NYW5hZ2VyIiwic3Bhd25PYmoiLCJmaW5kT2JqZWN0IiwiU1BBV04iLCJvYmoiLCJTUEFXTl9QT0lOVCIsInBsYXllciIsIlBMQVlFUiIsIngiLCJ5Iiwic3RhcnRGb2xsb3ciLCJzcHJpdGUiLCJ1bnN1YnNjcmliZVBsYXllckNvbGxpZGUiLCJhZGRPbkNvbGxpZGVTdGFydCIsIm9uUGxheWVyQ29sbGlkZSIsImNyZWF0ZU1hcE9iamVjdHMiLCJjcmVhdGVNYXBTZW5zb3JzIiwicmVjdCIsIlNFTlNPUlMiLCJDRUxFQlLQkFRJT04iLCJjZWxlYnJhdGVTZW5zb3IiLCJhZGQiLCJyZWN0YW5nbGUiLCJpc1NlbnNvciIsImlzU3RhdGljIiwidW5zdWJzY3JpYmVDZWxlYnJhdGlvbiIsIm9uUGxheWVyV2luIiwiZ2V0T2JqZWN0TGF5ZXIiLCJDUkFURVMiLCJvYmplY3RzIiwiY3JlYXRlT2JqZWN0IiwiaW1hZ2UiLCJCTE9DSyIsInNldEJvZHkiLCJQTEFURk9STV9MT0NBVElPTlMiLCJwb2ludCIsIldPT0RFTl9QTEFOSyIsInRleHQiLCJnYW1lT2JqZWN0QiIsIlRpbGVtYXBzIiwiVGlsZSIsInByb3BlcnRpZXMiLCJpc0xldGhhbCIsImZyZWV6ZSIsImZhZGUiLCJvbmNlIiwiQ0FNRVJBX0ZBREVfT1VUX0NPTVBMRVRFIiwicmVzdGFydCIsInVwZGF0ZSIsIkFuaW1TdGF0ZSIsInNwcml0ZU5hbWUiLCJjYW5KdW1wIiwiZGVzdHJvZWQiLCJpc1RvdWNoaW5nIiwidG9wIiwiYm90dG9tIiwibGVmdCIsInJpZ2h0IiwiY3JlYXRlQW5pbXMiLCJzZW5zb3JzIiwiY3JlYXRlUGxheWVyU2Vuc29ycyIsImNvbXBvdW5kQm9keSIsImNyZWF0ZVBsYXllckJvZHkiLCJzZXRFeGlzdGluZ0JvZHkiLCJzZXRTY2FsZSIsInNldEZpeGVkUm90YXRpb24iLCJzZXRQb3NpdGlvbiIsIklucHV0IiwiS2V5Ym9hcmQiLCJLZXlDb2RlcyIsIkxFRlQiLCJSSUdIVCIsIlVQIiwiRCIsIlciLCJBIiwia2V5cyIsInVwIiwiaW5wdXQiLCJldmVudHMiLCJvbiIsIlVQREFURSIsIkJFRk9SRV9VUERBVEUiLCJyZXNldFRvdWNoaW5nIiwiU0hVVERPV04iLCJkZXN0cm95IiwiREVTVFJPWSIsImFkZENvbGxpc2lvbnMiLCJyZW1vdmVDb2xsaXNpb25zIiwicmVtb3ZlT25Db2xsaWRlU3RhcnQiLCJvblNlbnNvckNvbGxpZGUiLCJyZW1vdmVPbkNvbGxpZGVBY3RpdmUiLCJhZGRPbkNvbGxpZGVBY3RpdmUiLCJib2R5QSIsImJvZHlCIiwicGFpciIsInNlcGFyYXRpb24iLCJkaXJlY3Rpb24iLCJib2RpZXMiLCJjaGFtZmVyIiwicmFkaXVzIiwiYm9keSIsInBhcnRzIiwiZnJpY3Rpb25TdGF0aWMiLCJmcmljdGlvbkFpciIsImZyaWN0aW9uIiwic2V0U3RhdGljIiwib2ZmIiwianVtcFRpbWVyIiwidmVsb2NpdHkiLCJpc1JpZ2h0S2V5RG93biIsImlzRG93biIsImlzTGVmdEtleURvd24iLCJpc0p1bXBLZXlEb3duIiwiaXNPbkdyb3VuZCIsIm1vdmVGb3JjZSIsInNldEZsaXBYIiwiYXBwbHlGb3JjZSIsIlZlY3RvcjIiLCJzZXRWZWxvY2l0eVgiLCJzZXRWZWxvY2l0eVkiLCJmb3JjZSIsImFuaW1zIiwicGxheSIsIlJVTiIsIklETEUiLCJzdG9wIiwic2V0VGV4dHVyZSIsIkFycmF5IiwiaXNBcnJheSIsInJlYWR5S2V5cyIsImtleUNvZGUiLCJrZXlib2FyZCIsImFkZEtleSIsImNyZWF0ZUtleXMiLCJzb21lIiwiaXNVcCIsImV2ZXJ5IiwiYW5pbUNvbmZpZyIsImFuaW0iLCJlbmQiLCJmcmFtZVJhdGUiLCJyZXBlYXQiLCJmcmFtZXMiLCJnZW5lcmF0ZUZyYW1lTnVtYmVycyIsIlV0aWxzIiwibnVtVGlsZXMiLCJwbGF0Zm9ybSIsInRpbGVTcHJpdGUiLCJnYW1lT2JqZWN0IiwicmVzdGl0dXRpb24iLCJkZW5zaXR5IiwiY29uc3RyYWludCIsIlBoeXNpY3MiLCJNYXR0ZXIiLCJNYXR0ZXJQaHlzaWNzIiwicG9pbnRBIiwiYW5nbGUiLCJyYW5kb20iLCJCZXR3ZWVuIiwic2V0QW5nbGUiLCJJbWFnZUtleXMiLCJUaWxlS2V5cyIsInBsdWdpbk1hbmFnZXIiLCJFdmVudHMiLCJFdmVudEVtaXR0ZXIiLCJjb2xsaXNpb25BY3RpdmVMaXN0ZW5lcnMiLCJNYXAiLCJjb2xsaXNpb25FbmRMaXN0ZW5lcnMiLCJjb2xsaXNpb25TdGFydExpc3RlbmVycyIsIm9uQ29sbGlzaW9uU3RhcnQiLCJvbkNvbGxpc2lvbkV2ZW50IiwiQ09MTElTSU9OX1NUQVJUIiwib25Db2xsaXNpb25FbmQiLCJDT0xMSVNJT05fRU5EIiwib25Db2xsaXNpb25BY3RpdmUiLCJDT0xMSVNJT05fQUNUSVZFIiwic2h1dGRvd24iLCJzdWJzY3JpYmVQaGFzZXJFdmVudHMiLCJyZW1vdmVBbGxDb2xsaWRlckxpc3RlbmVycyIsInVuc3Vic2NyaWJlUGhhc2VyRXZlbnRzIiwiU1RBUlQiLCJvYmplY3RBIiwib2JqZWN0QiIsImNhbGxiYWNrIiwiY29udGV4dCIsImFkZE9uQ29sbGlkZSIsImFkZE9uQ29sbGlkZUVuZCIsInJlbW92ZU9uQ29sbGlkZUVuZCIsInJlbW92ZU9uQ29sbGlkZSIsInVuZGVmaW5lZCIsImxpc3RlbmVyTWFwIiwiZXZlbnROYW1lIiwiZXZlbnQiLCJwYWlycyIsInBhaXJFdmVudE5hbWUiLCJnYW1lT2JqZWN0QSIsImdldFJvb3RCb2R5IiwidGlsZSIsImV2ZW50RGF0YSIsImVtaXQiLCJzaXplIiwiZXZlbnREYXRhUmV2ZXJzZWQiLCJpc1JldmVyc2VkIiwiY2hlY2hQYWlyQW5kRW1pdCIsImNhbGxiYWNrcyIsInRhcmdldCIsImEiLCJkZWxldGUiLCJyZW1haW5pbmdDYWxsYmFja3MiLCJmaWx0ZXIiLCJjYiIsImluY2x1ZGVzIiwic2V0IiwiYiIsImFkZE9uQ29sbGlkZU9iamVjdFZzT2JqZWN0IiwiY2xlYXIiLCJjb25zb2xlIiwid2FybiIsIlNjZW5lUGx1Z2luIiwiTUVOVV9TQ0VORSIsImJnIiwic3lzIiwic2V0T3JpZ2luIiwiZmllbGQiLCJUQVBfVE9fUExBWSIsImZvbnQiLCJmaWxsIiwiYWxpZ24iLCJhY3RpdmVQb2ludGVyIiwidGlsZVBvc2l0aW9uWSIsIkxvY2FsVGV4dHMiLCJsb2FkaW5nQmFyIiwiRGlzcGxheSIsIkFsaWduIiwiSW4iLCJDZW50ZXIiLCJ6b25lIl0sIm1hcHBpbmdzIjoiYUFDRSxTQUFTQSxFQUFxQkMsR0FRN0IsSUFQQSxJQU1JQyxFQUFVQyxFQU5WQyxFQUFXSCxFQUFLLEdBQ2hCSSxFQUFjSixFQUFLLEdBQ25CSyxFQUFpQkwsRUFBSyxHQUlITSxFQUFJLEVBQUdDLEVBQVcsR0FDcENELEVBQUlILEVBQVNLLE9BQVFGLElBQ3pCSixFQUFVQyxFQUFTRyxHQUNoQkcsT0FBT0MsVUFBVUMsZUFBZUMsS0FBS0MsRUFBaUJYLElBQVlXLEVBQWdCWCxJQUNwRkssRUFBU08sS0FBS0QsRUFBZ0JYLEdBQVMsSUFFeENXLEVBQWdCWCxHQUFXLEVBRTVCLElBQUlELEtBQVlHLEVBQ1pLLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtSLEVBQWFILEtBQ3BEYyxFQUFRZCxHQUFZRyxFQUFZSCxJQUts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U0FBS0EsR0FDRCxzQ0FDQSw0QkFDQSwwQkFISixDQUFLQSxNQUFVLEtBS2YsVUFBZUEsRyxvYkNKZixXQUNBLE9BRUEsY0FJSSxhLE9BQ0ksWUFBTSxDQUFFL1QsSUFBSyxVQUFVNEQsaUJBQWdCLEtBa0IvQyxPQXZCMEMsT0FRdEMsWUFBQUgsUUFBQSxzQkFDSUMsS0FBS3NRLFdBQWF0USxLQUFLbUQsSUFBSVYsT0FBTyxFQUFHLEVBQUcsY0FBY29OLFVBQVUsRUFBRyxHQUNuRS9SLE9BQU95UyxRQUFRQyxNQUFNQyxHQUFHQyxPQUNwQjFRLEtBQUtzUSxXQUNMdFEsS0FBS21ELElBQUl3TixLQUFLM1EsS0FBSzRQLElBQUlwUSxPQUFPdkIsTUFBUSxFQUFHK0IsS0FBSzRQLElBQUlwUSxPQUFPdEIsT0FBUyxFQUFHOEIsS0FBSzRQLElBQUlwUSxPQUFPdkIsTUFBTytCLEtBQUs0UCxJQUFJcFEsT0FBT3RCLFNBR2hIOEIsS0FBSzdDLEtBQUsySixHQUFHLFlBQVksU0FBQTlLLEdBQVMsU0FBS3NVLFdBQVd4SyxTQUFTOUosRUFBTyxHQUFHNlQsVUFBVSxFQUFHLE1BRWxGLFVBQWUxUyxLQUFLNkMsT0FHeEIsWUFBQTNELE9BQUEsV0FDSTJELEtBQUs1QyxNQUFNNkMsTUFBTSxVQUFVeVAsYUFFbkMsRUF2QkEsQ0FBMEM1UixPQUFPcUMsTyIsImZpbGUiOiJhcHAuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdHJldHVybiByZXN1bHQ7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4gXHQvLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbiBcdC8vIFByb21pc2UgPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG4gXHR2YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuIFx0XHQwOiAwXG4gXHR9O1xuXG4gXHR2YXIgZGVmZXJyZWRNb2R1bGVzID0gW107XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdHZhciBqc29ucEFycmF5ID0gd2luZG93W1wid2VicGFja0pzb25wXCJdID0gd2luZG93W1wid2VicGFja0pzb25wXCJdIHx8IFtdO1xuIFx0dmFyIG9sZEpzb25wRnVuY3Rpb24gPSBqc29ucEFycmF5LnB1c2guYmluZChqc29ucEFycmF5KTtcbiBcdGpzb25wQXJyYXkucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrO1xuIFx0anNvbnBBcnJheSA9IGpzb25wQXJyYXkuc2xpY2UoKTtcbiBcdGZvcih2YXIgaSA9IDA7IGkgPCBqc29ucEFycmF5Lmxlbmd0aDsgaSsrKSB3ZWJwYWNrSnNvbnBDYWxsYmFjayhqc29ucEFycmF5W2ldKTtcbiBcdHZhciBwYXJlbnRKc29ucEZ1bmN0aW9uID0gb2xkSnNvbnBGdW5jdGlvbjtcblxuXG4gXHQvLyBhZGQgZW50cnkgbW9kdWxlIHRvIGRlZmVycmVkIGxpc3RcbiBcdGRlZmVycmVkTW9kdWxlcy5wdXNoKFs1LDFdKTtcbiBcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gcmVhZHlcbiBcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIiwiZW51bSBTY2VuZUtleXMge1xyXG4gICAgQk9PVF9TQ0VORSA9IFwiQm9vdFNjZW5lXCIsXHJcbiAgICBHQU1FX1NDRU5FID0gXCJHYW1lU2NlbmVcIixcclxuICAgIE1FTlVfU0NFTkUgPSBcIk1lbnVTY2VuZVwiLFxyXG4gICAgUFJFTE9BRF9TQ0VORSA9IFwiUHJlbG9hZFNjZW5lXCJcclxufVxyXG5leHBvcnQgZGVmYXVsdCBTY2VuZUtleXMiLCJlbnVtIFBoYXNlckV2ZW50cyB7XHJcbiAgIEJFRk9SRV9VUERBVEUgPSBcImJlZm9yZXVwZGF0ZVwiLFxyXG4gICBDT0xMSVNJT05fU1RBUlQgPSBcImNvbGxpc2lvbnN0YXJ0XCIsXHJcbiAgIENPTExJU0lPTl9FTkQgPSBcImNvbGxpc2lvbmVuZFwiLFxyXG4gICBDT0xMSVNJT05fQUNUSVZFID0gXCJjb2xsaXNpb25hY3RpdmVcIixcclxuXHJcbiAgIFVQREFURSA9IFwidXBkYXRlXCIsXHJcbiAgIFNIVVRET1dOID0gXCJzaHV0ZG93blwiLFxyXG4gICBERVNUUk9ZID0gXCJkZXN0cm95XCIsXHJcbiAgIFNUQVJUID0gXCJzdGFydFwiLFxyXG5cclxuICAgQ0FNRVJBX0ZBREVfT1VUX0NPTVBMRVRFID0gXCJjYW1lcmFmYWRlb3V0Y29tcGxldGVcIlxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IFBoYXNlckV2ZW50cyIsImltcG9ydCBJR2FtZUNvbmZpZyBmcm9tIFwiLi4vaW50ZXJmYWNlcy9JR2FtZUNvbmZpZ1wiO1xyXG5cclxuY29uc3QgZ2FtZUNvbmZpZyA9IHJlcXVpcmUoXCIuLi8uLi9nYW1lLWNvbmZpZy5qc29uXCIpO1xyXG5cclxuY2xhc3MgUmVzb3VyY2VMb2FkZXIge1xyXG5cclxuICAgIGxvYWQoc2NlbmU6UGhhc2VyLlNjZW5lKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3Qgc2NlbmVOYW1lID0gc2NlbmUuc2NlbmUua2V5XHJcbiAgICAgICAgY29uc3QgcmVzb3VyY2VzID0gKGdhbWVDb25maWcgYXMgSUdhbWVDb25maWcpLnJlc291cmNlc1tzY2VuZU5hbWVdO1xyXG5cclxuICAgICAgICBpZiAocmVzb3VyY2VzKSB7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgZWwgaW4gcmVzb3VyY2VzKSB7XHJcbiAgICAgICAgICAgICAgICByZXNvdXJjZXNbZWxdLmZvckVhY2gocmVzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBzY2VuZS5sb2FkW2VsXSguLi5yZXMpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBSZXNvdXJjZUxvYWRlcigpOyIsImltcG9ydCAqIGFzIFBoYXNlciBmcm9tICdwaGFzZXInO1xyXG4vLyBpbXBvcnQgUGhhc2VyTWF0dGVyQ29sbGlzb25QbHVnaW4gZnJvbSBcInBoYXNlci1tYXR0ZXItY29sbGlzaW9uLXBsdWdpblwiXHJcbmltcG9ydCBTY2VuZUtleXMgZnJvbSAnLi9jb25zdC9TY2VuZUtleXMnO1xyXG5pbXBvcnQgQm9vdFNjZW5lIGZyb20gJy4vc2NlbmVzL0Jvb3RTY2VuZSc7XHJcbmltcG9ydCBHYW1lU2NlbmUgZnJvbSAnLi9zY2VuZXMvR2FtZVNjZW5lJztcclxuaW1wb3J0IE1lbnVTY2VuZSBmcm9tICcuL3NjZW5lcy9NZW51U2NlbmUnO1xyXG5pbXBvcnQgUHJlbG9hZFNjZW5lIGZyb20gJy4vc2NlbmVzL1ByZWxvYWRTY2VuZSc7XHJcbmltcG9ydCBNYXR0ZXJDb2xsaXNpb25QbHVnaW4gZnJvbSAnLi91dGlscy9QaGFzZXJNYXR0ZXJDb2xsaXNpb25QbHVnaW4nO1xyXG5cclxudHlwZSBzY2FsZU1vZGUgPSAnRklUJyB8ICdTTU9PVEgnXHJcbmNvbnN0IERFRkFVTFRfSEVJR0hUOiBudW1iZXIgPSAxMDgwXHJcbmNvbnN0IERFRkFVTFRfV0lEVEg6IG51bWJlciA9IDE5MjBcclxuY29uc3QgTUFYX0hFSUdIVDogbnVtYmVyID0gMTQ0MFxyXG5jb25zdCBNQVhfV0lEVEg6IG51bWJlciA9IDI1NjBcclxubGV0IFNDQUxFX01PREU6IHNjYWxlTW9kZSA9ICdTTU9PVEgnIC8vIEZJVCBPUiBTTU9PVEhcclxuU2NlbmVLZXlzLkdBTUVfU0NFTkVcclxuXHJcbmNvbnN0IGdhbWVDb25maWc6IFBoYXNlci5UeXBlcy5Db3JlLkdhbWVDb25maWcgPSB7XHJcbiAgICB0aXRsZTogJ3NwYWNlJyxcclxuICAgIHNjZW5lOiBbQm9vdFNjZW5lLCBQcmVsb2FkU2NlbmUsIE1lbnVTY2VuZSwgR2FtZVNjZW5lXSxcclxuICAgIHR5cGU6IFBoYXNlci5BVVRPLFxyXG4gICAgc2NhbGU6IHsgd2lkdGg6IERFRkFVTFRfV0lEVEgsIGhlaWdodDogREVGQVVMVF9IRUlHSFQgfSxcclxuICAgIHBoeXNpY3M6IHsgZGVmYXVsdDogXCJtYXR0ZXJcIiwgbWF0dGVyOiB7IGRlYnVnOiB0cnVlIH0gfSxcclxuICAgIHBhcmVudDogJ2dhbWUnLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnIzAwMGMxZicsXHJcbn07XHJcbmV4cG9ydCBjb25zdCBnYW1lID0gbmV3IFBoYXNlci5HYW1lKGdhbWVDb25maWcpO1xyXG5cclxuY29uc3Qgb25SZXNpemUgPSAoKSA9PiB7XHJcbiAgICBjb25zdCB3ID0gd2luZG93LmlubmVyV2lkdGhcclxuICAgIGNvbnN0IGggPSB3aW5kb3cuaW5uZXJIZWlnaHRcclxuXHJcbiAgICBsZXQgd2lkdGggPSBERUZBVUxUX1dJRFRIXHJcbiAgICBsZXQgaGVpZ2h0ID0gREVGQVVMVF9IRUlHSFRcclxuICAgIGxldCBtYXhXaWR0aCA9IE1BWF9XSURUSFxyXG4gICAgbGV0IG1heEhlaWdodCA9IE1BWF9IRUlHSFRcclxuICAgIGxldCBzY2FsZU1vZGUgPSBTQ0FMRV9NT0RFXHJcblxyXG4gICAgbGV0IHNjYWxlID0gTWF0aC5taW4odyAvIHdpZHRoLCBoIC8gaGVpZ2h0KVxyXG4gICAgbGV0IG5ld1dpZHRoID0gTWF0aC5taW4odyAvIHNjYWxlLCBtYXhXaWR0aClcclxuICAgIGxldCBuZXdIZWlnaHQgPSBNYXRoLm1pbihoIC8gc2NhbGUsIG1heEhlaWdodClcclxuXHJcbiAgICBsZXQgZGVmYXVsdFJhdGlvID0gREVGQVVMVF9XSURUSCAvIERFRkFVTFRfSEVJR0hUXHJcbiAgICBsZXQgbWF4UmF0aW9XaWR0aCA9IE1BWF9XSURUSCAvIERFRkFVTFRfSEVJR0hUXHJcbiAgICBsZXQgbWF4UmF0aW9IZWlnaHQgPSBERUZBVUxUX1dJRFRIIC8gTUFYX0hFSUdIVFxyXG5cclxuICAgIC8vIHNtb290aCBzY2FsaW5nXHJcbiAgICBsZXQgc21vb3RoID0gMVxyXG4gICAgaWYgKHNjYWxlTW9kZSA9PT0gJ1NNT09USCcpIHtcclxuICAgICAgICBjb25zdCBtYXhTbW9vdGhTY2FsZSA9IDEuMTVcclxuICAgICAgICBjb25zdCBub3JtYWxpemUgPSAodmFsdWU6IG51bWJlciwgbWluOiBudW1iZXIsIG1heDogbnVtYmVyKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiAodmFsdWUgLSBtaW4pIC8gKG1heCAtIG1pbilcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHdpZHRoIC8gaGVpZ2h0IDwgdyAvIGgpIHtcclxuICAgICAgICAgICAgc21vb3RoID0gLW5vcm1hbGl6ZShuZXdXaWR0aCAvIG5ld0hlaWdodCwgZGVmYXVsdFJhdGlvLCBtYXhSYXRpb1dpZHRoKSAvICgxIC8gKG1heFNtb290aFNjYWxlIC0gMSkpICsgbWF4U21vb3RoU2NhbGVcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzbW9vdGggPSAtbm9ybWFsaXplKG5ld1dpZHRoIC8gbmV3SGVpZ2h0LCBkZWZhdWx0UmF0aW8sIG1heFJhdGlvSGVpZ2h0KSAvICgxIC8gKG1heFNtb290aFNjYWxlIC0gMSkpICsgbWF4U21vb3RoU2NhbGVcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gcmVzaXplIHRoZSBnYW1lXHJcbiAgICBnYW1lLnNjYWxlLnJlc2l6ZShuZXdXaWR0aCAqIHNtb290aCwgbmV3SGVpZ2h0ICogc21vb3RoKVxyXG5cclxuICAgIC8vIHNjYWxlIHRoZSB3aWR0aCBhbmQgaGVpZ2h0IG9mIHRoZSBjc3NcclxuICAgIGdhbWUuY2FudmFzLnN0eWxlLndpZHRoID0gbmV3V2lkdGggKiBzY2FsZSArICdweCdcclxuICAgIGdhbWUuY2FudmFzLnN0eWxlLmhlaWdodCA9IG5ld0hlaWdodCAqIHNjYWxlICsgJ3B4J1xyXG5cclxuICAgIC8vIGNlbnRlciB0aGUgZ2FtZSB3aXRoIGNzcyBtYXJnaW5cclxuICAgIGdhbWUuY2FudmFzLnN0eWxlLm1hcmdpblRvcCA9IGAkeyhoIC0gbmV3SGVpZ2h0ICogc2NhbGUpIC8gMn1weGBcclxuICAgIGdhbWUuY2FudmFzLnN0eWxlLm1hcmdpbkxlZnQgPSBgJHsodyAtIG5ld1dpZHRoICogc2NhbGUpIC8gMn1weGBcclxufVxyXG53aW5kb3cub25yZXNpemUgPSBvblJlc2l6ZTtcclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IG9uUmVzaXplKCkpXHJcbiIsImltcG9ydCBTY2VuZUtleXMgZnJvbSBcIi4uL2NvbnN0L1NjZW5lS2V5c1wiO1xyXG5pbXBvcnQgUmVzb3VyY2VMb2FkZXIgZnJvbSBcIi4uL3V0aWxzL1Jlc291cmNlTG9hZGVyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb290U2NlbmUgZXh0ZW5kcyBQaGFzZXIuU2NlbmUge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoeyBrZXk6IFNjZW5lS2V5cy5CT09UX1NDRU5FIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByZWxvYWQoKTogdm9pZCB7XHJcbiAgICAgICAgUmVzb3VyY2VMb2FkZXIubG9hZCh0aGlzKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNjZW5lLnN0YXJ0KFNjZW5lS2V5cy5QUkVMT0FEX1NDRU5FKVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBsYXllciBmcm9tIFwiLi4vY29tcG9uZW50cy9QbGF5ZXJcIjtcclxuaW1wb3J0IFJvdGF0aW5nUGxhdGZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUm90YXRpblBsYXRmb3JtXCI7XHJcbmltcG9ydCBJbWFnZUtleXMgZnJvbSBcIi4uL2NvbnN0L0ltYWdlS2V5c1wiO1xyXG5pbXBvcnQgUGhhc2VyRXZlbnRzIGZyb20gXCIuLi9jb25zdC9QaGFzZXJFdmVudHNcIjtcclxuaW1wb3J0IFNjZW5lS2V5cyBmcm9tIFwiLi4vY29uc3QvU2NlbmVLZXlzXCI7XHJcbmltcG9ydCBUaWxlS2V5cyBmcm9tIFwiLi4vY29uc3QvVGlsZUtleXNcIjtcclxuaW1wb3J0IE1hdHRlckNvbGxpc2lvblBsdWdpbiwgeyBFdmVudERhdGEgfSBmcm9tIFwiLi4vdXRpbHMvUGhhc2VyTWF0dGVyQ29sbGlzaW9uUGx1Z2luXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lU2NlbmUgZXh0ZW5kcyBQaGFzZXIuU2NlbmUge1xyXG5cclxuICAgIHByb3RlY3RlZCBwbGF5ZXI6IFBsYXllcjtcclxuICAgIHByb3RlY3RlZCBtYXA6IFBoYXNlci5UaWxlbWFwcy5UaWxlbWFwO1xyXG4gICAgcHJvdGVjdGVkIHVuc3Vic2NyaWJlUGxheWVyQ29sbGlkZTogKCkgPT4gdm9pZDtcclxuICAgIHByb3RlY3RlZCB1bnN1YnNjcmliZUNlbGVicmF0aW9uOiAoKSA9PiB2b2lkO1xyXG4gICAgcHVibGljIG1hdHRlckNvbGxpc2lvbjogTWF0dGVyQ29sbGlzaW9uUGx1Z2luO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKHsga2V5OiBTY2VuZUtleXMuR0FNRV9TQ0VORSB9KVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZSgpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgdGhpcy5tYXAgPSB0aGlzLm1ha2UudGlsZW1hcCh7IGtleTogVGlsZUtleXMuTUFQIH0pO1xyXG4gICAgICAgIGNvbnN0IHRpbGVzZXQgPSB0aGlzLm1hcC5hZGRUaWxlc2V0SW1hZ2UoVGlsZUtleXMuVElMRVNFVF9FWFRSVURFRCk7XHJcbiAgICAgICAgY29uc3QgZ3JvdW5kTGF5ZXIgPSB0aGlzLm1hcC5jcmVhdGVEeW5hbWljTGF5ZXIoVGlsZUtleXMuR1JPVU5ELCB0aWxlc2V0LCAwLCAwKTtcclxuICAgICAgICBjb25zdCBsYXZhTGF5ZXIgPSB0aGlzLm1hcC5jcmVhdGVEeW5hbWljTGF5ZXIoVGlsZUtleXMuTEFWQSwgdGlsZXNldCwgMCwgMCk7XHJcbiAgICAgICAgdGhpcy5tYXAuY3JlYXRlRHluYW1pY0xheWVyKFRpbGVLZXlzLkJBQ0tHUk9VTkQsIHRpbGVzZXQsIDAsIDApO1xyXG4gICAgICAgIHRoaXMubWFwLmNyZWF0ZUR5bmFtaWNMYXllcihUaWxlS2V5cy5GT1JFR1JPVU5ELCB0aWxlc2V0LCAwLCAwKS5zZXREZXB0aCgxMCk7XHJcblxyXG4gICAgICAgIGdyb3VuZExheWVyLnNldENvbGxpc2lvbkJ5UHJvcGVydHkoeyBjb2xsaWRlczogdHJ1ZSB9KTtcclxuICAgICAgICBsYXZhTGF5ZXIuc2V0Q29sbGlzaW9uQnlQcm9wZXJ0eSh7IGNvbGxpZGVzOiB0cnVlIH0pO1xyXG5cclxuICAgICAgICB0aGlzLm1hdHRlci53b3JsZC5jb252ZXJ0VGlsZW1hcExheWVyKGdyb3VuZExheWVyKTtcclxuICAgICAgICB0aGlzLm1hdHRlci53b3JsZC5jb252ZXJ0VGlsZW1hcExheWVyKGxhdmFMYXllcik7XHJcblxyXG4gICAgICAgIHRoaXMuY2FtZXJhcy5tYWluLnNldEJvdW5kcygwLCAwLCB0aGlzLm1hcC53aWR0aEluUGl4ZWxzLCB0aGlzLm1hcC5oZWlnaHRJblBpeGVscyk7XHJcbiAgICAgICAgdGhpcy5tYXR0ZXIud29ybGQuc2V0Qm91bmRzKDAsIDAsIHRoaXMubWFwLndpZHRoSW5QaXhlbHMsIHRoaXMubWFwLmhlaWdodEluUGl4ZWxzKTtcclxuXHJcbiAgICAgICAgdGhpcy5tYXR0ZXJDb2xsaXNpb24gPSBuZXcgTWF0dGVyQ29sbGlzaW9uUGx1Z2luKHRoaXMsIG5ldyBQaGFzZXIuUGx1Z2lucy5QbHVnaW5NYW5hZ2VyKHRoaXMuc2NlbmUuc2NlbmUuZ2FtZSkpXHJcblxyXG4gICAgICAgIGNvbnN0IHNwYXduT2JqID0gdGhpcy5tYXAuZmluZE9iamVjdChUaWxlS2V5cy5TUEFXTiwgb2JqID0+IG9iai5uYW1lID09PSBUaWxlS2V5cy5TUEFXTl9QT0lOVCkgYXMgUGhhc2VyLkdhbWVPYmplY3RzLkNvbnRhaW5lcjtcclxuXHJcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKHRoaXMsIEltYWdlS2V5cy5QTEFZRVIsIHNwYXduT2JqLngsIHNwYXduT2JqLnkpXHJcbiAgICAgICAgdGhpcy5jYW1lcmFzLm1haW4uc3RhcnRGb2xsb3codGhpcy5wbGF5ZXIuc3ByaXRlLCBmYWxzZSwgLjUsIC41KTtcclxuICAgICAgICB0aGlzLnVuc3Vic2NyaWJlUGxheWVyQ29sbGlkZSA9IHRoaXMubWF0dGVyQ29sbGlzaW9uLmFkZE9uQ29sbGlkZVN0YXJ0KFt0aGlzLnBsYXllci5zcHJpdGVdLCBbXSwgdGhpcy5vblBsYXllckNvbGxpZGUsIHRoaXMpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5tYXApIHtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGVNYXBPYmplY3RzKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlTWFwU2Vuc29ycygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlTWFwU2Vuc29ycygpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5tYXAuZmluZE9iamVjdChUaWxlS2V5cy5TRU5TT1JTLCBvYmogPT4gb2JqLm5hbWUgPT09IFRpbGVLZXlzLkNFTEVCUtCQVElPTikgYXMgUGhhc2VyLkdhbWVPYmplY3RzLkNvbnRhaW5lcjtcclxuICAgICAgICBjb25zdCBjZWxlYnJhdGVTZW5zb3IgPSB0aGlzLm1hdHRlci5hZGQucmVjdGFuZ2xlKHJlY3QueCArIHJlY3Qud2lkdGggLyAyLCByZWN0LnkgKyByZWN0LmhlaWdodCAvIDIsIHJlY3Qud2lkdGgsIHJlY3QuaGVpZ2h0LCB7IGlzU2Vuc29yOiB0cnVlLCBpc1N0YXRpYzogdHJ1ZSB9KTtcclxuICAgICAgICB0aGlzLnVuc3Vic2NyaWJlQ2VsZWJyYXRpb24gPSB0aGlzLm1hdHRlckNvbGxpc2lvbi5hZGRPbkNvbGxpZGVTdGFydChbdGhpcy5wbGF5ZXIuc3ByaXRlXSwgW2NlbGVicmF0ZVNlbnNvcl0sIHRoaXMub25QbGF5ZXJXaW4sIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBjcmVhdGVNYXBPYmplY3RzKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubWFwLmdldE9iamVjdExheWVyKFRpbGVLZXlzLkNSQVRFUykub2JqZWN0cy5mb3JFYWNoKGNyZWF0ZU9iamVjdCA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9ID0gY3JlYXRlT2JqZWN0O1xyXG4gICAgICAgICAgICB0aGlzLm1hdHRlci5hZGQuaW1hZ2UoeCArIHdpZHRoIC8gMiwgeSAtIGhlaWdodCAvIDIsIEltYWdlS2V5cy5CTE9DSykuc2V0Qm9keShcInJlY3RhbmdsZVwiKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICB0aGlzLiBtYXAuZ2V0T2JqZWN0TGF5ZXIoVGlsZUtleXMuUExBVEZPUk1fTE9DQVRJT05TKS5vYmplY3RzLmZvckVhY2gocG9pbnQgPT4ge1xyXG4gICAgICAgICAgICBuZXcgUm90YXRpbmdQbGF0Zm9ybSh0aGlzLnNjZW5lLnNjZW5lLCBJbWFnZUtleXMuV09PREVOX1BMQU5LLCBwb2ludC54LCBwb2ludC55KTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBvblBsYXllcldpbigpIHtcclxuICAgICAgICB0aGlzLnVuc3Vic2NyaWJlQ2VsZWJyYXRpb24oKTtcclxuICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5tYXAuZmluZE9iamVjdChUaWxlS2V5cy5TRU5TT1JTLCBvYmogPT4gb2JqLm5hbWUgPT09IFRpbGVLZXlzLkNFTEVCUtCQVElPTikgYXMgUGhhc2VyLkdhbWVPYmplY3RzLkNvbnRhaW5lcjtcclxuICAgICAgICB0aGlzLnNjZW5lLnNjZW5lLmFkZC50ZXh0KHJlY3QueCwgcmVjdC55LCBcIllvdSBmaW5pc2ggdGhlIGxldmVsXCIpXHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uUGxheWVyQ29sbGlkZSh7IGJvZHlBLCBib2R5QiwgZ2FtZU9iamVjdEEsIGdhbWVPYmplY3RCLCBwYWlyIH06IEV2ZW50RGF0YSk6IHZvaWQge1xyXG4gICAgICAgIGlmICghZ2FtZU9iamVjdEIgfHwgIShnYW1lT2JqZWN0QiBpbnN0YW5jZW9mIFBoYXNlci5UaWxlbWFwcy5UaWxlKSkgcmV0dXJuO1xyXG5cclxuICAgICAgICBjb25zdCB0aWxlID0gZ2FtZU9iamVjdEI7XHJcblxyXG4gICAgICAgIGlmICh0aWxlLnByb3BlcnRpZXMuaXNMZXRoYWwpIHtcclxuICAgICAgICAgICAgdGhpcy51bnN1YnNjcmliZVBsYXllckNvbGxpZGUoKTtcclxuICAgICAgICAgICAgdGhpcy5wbGF5ZXIuZnJlZXplKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FtZXJhcy5tYWluLmZhZGUoMjUwLCAwLCAwLCAwKTtcclxuICAgICAgICAgICAgdGhpcy5jYW1lcmFzLm1haW4ub25jZShQaGFzZXJFdmVudHMuQ0FNRVJBX0ZBREVfT1VUX0NPTVBMRVRFLCAoKSA9PiB0aGlzLnNjZW5lLnJlc3RhcnQoKSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCk6IHZvaWQge1xyXG5cclxuICAgIH1cclxufSIsImltcG9ydCBJR2FtZUNvbmZpZywgeyBJQW5pbVN0YXRlIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvSUdhbWVDb25maWdcIjtcclxuaW1wb3J0IE11bHR5S2V5cywgeyBLZXlzIH0gZnJvbSBcIi4uL3V0aWxzL011bHR5S2V5c1wiO1xyXG5pbXBvcnQgUGhhc2VyRXZlbnRzIGZyb20gXCIuLi9jb25zdC9QaGFzZXJFdmVudHNcIjtcclxuaW1wb3J0IEdhbWVTY2VuZSBmcm9tIFwiLi4vc2NlbmVzL0dhbWVTY2VuZVwiO1xyXG5pbXBvcnQgeyBFdmVudERhdGEgfSBmcm9tIFwiLi4vdXRpbHMvUGhhc2VyTWF0dGVyQ29sbGlzaW9uUGx1Z2luXCI7XHJcbmltcG9ydCBMb2dnZXIgZnJvbSBcIi4uL3V0aWxzL0xvZ2dlclwiO1xyXG5pbXBvcnQgVXRpbHMgZnJvbSBcIi4uL3V0aWxzL1V0aWxzXCI7XHJcbmNvbnN0IGdhbWVDb25maWcgPSByZXF1aXJlKFwiLi4vLi4vZ2FtZS1jb25maWcuanNvblwiKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXllciB7XHJcblxyXG4gICAgcHVibGljIHNwcml0ZTogUGhhc2VyLlBoeXNpY3MuTWF0dGVyLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBzcHJpdGVOYW1lOiBzdHJpbmc7XHJcbiAgICBwcm90ZWN0ZWQgc2Vuc29yczogSVNlbnNvcnM7XHJcbiAgICBwcm90ZWN0ZWQgc2NlbmU6IEdhbWVTY2VuZTtcclxuICAgIHByb3RlY3RlZCBjYW5KdW1wOiBib29sZWFuO1xyXG4gICAgcHJvdGVjdGVkIGp1bXBUaW1lcjogUGhhc2VyLlRpbWUuVGltZXJFdmVudDtcclxuICAgIHByb3RlY3RlZCBkZXN0cm9lZDogYm9vbGVhbjtcclxuICAgIHByb3RlY3RlZCBpbnB1dDogTXVsdHlLZXlzO1xyXG4gICAgcHJvdGVjdGVkIGlzVG91Y2hpbmc6IHsgdG9wOiBib29sZWFuLCBib3R0b206IGJvb2xlYW4sIGxlZnQ6IGJvb2xlYW4sIHJpZ2h0OiBib29sZWFuIH07XHJcblxyXG4gICAgY29uc3RydWN0b3Ioc2NlbmU6IEdhbWVTY2VuZSwgc3ByaXRlTmFtZTogc3RyaW5nLCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuc3ByaXRlTmFtZSA9IHNwcml0ZU5hbWU7XHJcbiAgICAgICAgdGhpcy5jYW5KdW1wID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmRlc3Ryb2VkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5pc1RvdWNoaW5nID0geyB0b3A6IGZhbHNlLCBib3R0b206IGZhbHNlLCBsZWZ0OiBmYWxzZSwgcmlnaHQ6IGZhbHNlIH07XHJcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xyXG4gICAgICAgIFV0aWxzLmNyZWF0ZUFuaW1zKHNjZW5lLCBzcHJpdGVOYW1lKTtcclxuICAgICAgICAvLyB0aGlzLmNyZWF0ZVBsYXllckFuaW1zKHNwcml0ZU5hbWUpO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlID0gc2NlbmUubWF0dGVyLmFkZC5zcHJpdGUoMCwgMCwgc3ByaXRlTmFtZSwgMCk7XHJcbiAgICAgICAgdGhpcy5zZW5zb3JzID0gdGhpcy5jcmVhdGVQbGF5ZXJTZW5zb3JzKHRoaXMuc3ByaXRlLndpZHRoLCB0aGlzLnNwcml0ZS5oZWlnaHQpXHJcbiAgICAgICAgY29uc3QgY29tcG91bmRCb2R5ID0gdGhpcy5jcmVhdGVQbGF5ZXJCb2R5KHRoaXMuc2Vuc29ycykgYXMgYW55O1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNldEV4aXN0aW5nQm9keShjb21wb3VuZEJvZHkpO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNldFNjYWxlKDIpO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNldEZpeGVkUm90YXRpb24oKTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRQb3NpdGlvbih4LCB5KTtcclxuXHJcbiAgICAgICAgY29uc3QgeyBMRUZULCBSSUdIVCwgVVAsIEQsIFcsIEEsIFNQQUNFIH0gPSBQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5Q29kZXM7XHJcbiAgICAgICAgY29uc3Qga2V5czogS2V5cyA9IHsgdXA6IFtVUCwgVywgU1BBQ0VdLCBsZWZ0OiBbTEVGVCwgQV0sIHJpZ2h0OiBbUklHSFQsIERdIH07XHJcbiAgICAgICAgdGhpcy5pbnB1dCA9IG5ldyBNdWx0eUtleXMoc2NlbmUsIGtleXMpO1xyXG5cclxuICAgICAgICBzY2VuZS5ldmVudHMub24oUGhhc2VyRXZlbnRzLlVQREFURSwgdGhpcy51cGRhdGUsIHRoaXMpO1xyXG4gICAgICAgIHNjZW5lLm1hdHRlci53b3JsZC5vbihQaGFzZXJFdmVudHMuQkVGT1JFX1VQREFURSwgdGhpcy5yZXNldFRvdWNoaW5nLCB0aGlzKTtcclxuICAgICAgICBzY2VuZS5ldmVudHMub25jZShQaGFzZXJFdmVudHMuU0hVVERPV04sIHRoaXMuZGVzdHJveSwgdGhpcyk7XHJcbiAgICAgICAgc2NlbmUuZXZlbnRzLm9uY2UoUGhhc2VyRXZlbnRzLkRFU1RST1ksIHRoaXMuZGVzdHJveSwgdGhpcyk7XHJcblxyXG4gICAgICAgIHRoaXMuYWRkQ29sbGlzaW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCByZW1vdmVDb2xsaXNpb25zKCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IHNlbnNvcnMgPSBbdGhpcy5zZW5zb3JzLmJvdHRvbSwgdGhpcy5zZW5zb3JzLnRvcCwgdGhpcy5zZW5zb3JzLmxlZnQsIHRoaXMuc2Vuc29ycy5yaWdodF07XHJcbiAgICAgICAgdGhpcy5zY2VuZS5tYXR0ZXJDb2xsaXNpb24ucmVtb3ZlT25Db2xsaWRlU3RhcnQoc2Vuc29ycywgW10sIHRoaXMub25TZW5zb3JDb2xsaWRlLCB0aGlzKTtcclxuICAgICAgICB0aGlzLnNjZW5lLm1hdHRlckNvbGxpc2lvbi5yZW1vdmVPbkNvbGxpZGVBY3RpdmUoc2Vuc29ycywgW10sIHRoaXMub25TZW5zb3JDb2xsaWRlLCB0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgYWRkQ29sbGlzaW9ucygpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBzZW5zb3JzID0gW3RoaXMuc2Vuc29ycy5ib3R0b20sIHRoaXMuc2Vuc29ycy50b3AsIHRoaXMuc2Vuc29ycy5sZWZ0LCB0aGlzLnNlbnNvcnMucmlnaHRdO1xyXG4gICAgICAgIHRoaXMuc2NlbmUubWF0dGVyQ29sbGlzaW9uLmFkZE9uQ29sbGlkZVN0YXJ0KHNlbnNvcnMsIFtdLCB0aGlzLm9uU2Vuc29yQ29sbGlkZSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5zY2VuZS5tYXR0ZXJDb2xsaXNpb24uYWRkT25Db2xsaWRlQWN0aXZlKHNlbnNvcnMsIFtdLCB0aGlzLm9uU2Vuc29yQ29sbGlkZSwgdGhpcylcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25TZW5zb3JDb2xsaWRlKHsgYm9keUEsIGJvZHlCLCBnYW1lT2JqZWN0QSwgZ2FtZU9iamVjdEIsIHBhaXIgfTogRXZlbnREYXRhKTogdm9pZCB7XHJcblxyXG4gICAgICAgIGlmIChib2R5Qi5pc1NlbnNvcikgcmV0dXJuO1xyXG4gICAgICAgIGlmIChib2R5QSA9PT0gdGhpcy5zZW5zb3JzLmxlZnQpIHtcclxuICAgICAgICAgICAgdGhpcy5pc1RvdWNoaW5nLmxlZnQgPSB0cnVlO1xyXG4gICAgICAgICAgICBpZiAocGFpci5zZXBhcmF0aW9uID4gMC41KSB0aGlzLnNwcml0ZS54ICs9IHBhaXIuc2VwYXJhdGlvbiAtIDAuNTtcclxuICAgICAgICB9IGVsc2UgaWYgKGJvZHlBID09PSB0aGlzLnNlbnNvcnMucmlnaHQpIHtcclxuICAgICAgICAgICAgdGhpcy5pc1RvdWNoaW5nLnJpZ2h0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKHBhaXIuc2VwYXJhdGlvbiA+IDAuNSkgdGhpcy5zcHJpdGUueCAtPSBwYWlyLnNlcGFyYXRpb24gLSAwLjU7XHJcbiAgICAgICAgfSBlbHNlIGlmIChib2R5QSA9PT0gdGhpcy5zZW5zb3JzLmJvdHRvbSkge1xyXG4gICAgICAgICAgICB0aGlzLmlzVG91Y2hpbmcuYm90dG9tID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2UgaWYgKGJvZHlBID09PSB0aGlzLnNlbnNvcnMudG9wKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNUb3VjaGluZy50b3AgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgcmVzZXRUb3VjaGluZygpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBkaXJlY3Rpb24gaW4gdGhpcy5pc1RvdWNoaW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNUb3VjaGluZ1tkaXJlY3Rpb25dID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBjcmVhdGVQbGF5ZXJTZW5zb3JzKHc6IG51bWJlciwgaDogbnVtYmVyKTogSVNlbnNvcnMge1xyXG4gICAgICAgIGNvbnN0IHsgYm9kaWVzIH0gPSB0aGlzLnNjZW5lLm1hdHRlcjtcclxuICAgICAgICBjb25zdCBzZW5zb3JzOiBJU2Vuc29ycyA9IHtcclxuICAgICAgICAgICAgbWFpbjogYm9kaWVzLnJlY3RhbmdsZSgwLCAwLCB3ICogLjYsIGgsIHsgY2hhbWZlcjogeyByYWRpdXM6IDEwIH0gfSksXHJcbiAgICAgICAgICAgIGJvdHRvbTogYm9kaWVzLnJlY3RhbmdsZSgwLCBoICogLjUsIHcgKiAuMjUsIDIsIHsgaXNTZW5zb3I6IHRydWUgfSksXHJcbiAgICAgICAgICAgIHRvcDogYm9kaWVzLnJlY3RhbmdsZSgwLCAtaCAqIC41LCB3ICogLjI1LCAyLCB7IGlzU2Vuc29yOiB0cnVlIH0pLFxyXG4gICAgICAgICAgICBsZWZ0OiBib2RpZXMucmVjdGFuZ2xlKC13ICogLjM1LCAwLCAyLCBoICogLjUsIHsgaXNTZW5zb3I6IHRydWUgfSksXHJcbiAgICAgICAgICAgIHJpZ2h0OiBib2RpZXMucmVjdGFuZ2xlKHcgKiAuMzUsIDAsIDIsIGggKiAuNSwgeyBpc1NlbnNvcjogdHJ1ZSB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc2Vuc29ycztcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlUGxheWVyQm9keShzZW5zb3JzOiBJU2Vuc29ycyk6IE1hdHRlckpTLkJvZHlUeXBlIHtcclxuICAgICAgICBjb25zdCBjb21wb3VuZEJvZHkgPSB0aGlzLnNjZW5lLm1hdHRlci5ib2R5LmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIHBhcnRzOiBbc2Vuc29ycy5tYWluLCBzZW5zb3JzLmJvdHRvbSwgc2Vuc29ycy50b3AsIHNlbnNvcnMubGVmdCwgc2Vuc29ycy5yaWdodF0sXHJcbiAgICAgICAgICAgIGZyaWN0aW9uU3RhdGljOiAwLFxyXG4gICAgICAgICAgICBmcmljdGlvbkFpcjogLjAyLFxyXG4gICAgICAgICAgICBmcmljdGlvbjogLjFcclxuICAgICAgICB9KVxyXG4gICAgICAgIHJldHVybiBjb21wb3VuZEJvZHkgYXMgTWF0dGVySlMuQm9keVR5cGU7XHJcbiAgICB9XHJcblxyXG4gICAgZnJlZXplKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNldFN0YXRpYyh0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICBkZXN0cm95KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZGVzdHJvZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICB0aGlzLnNjZW5lLmV2ZW50cy5vZmYoUGhhc2VyRXZlbnRzLlVQREFURSwgdGhpcy51cGRhdGUsIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuc2NlbmUuZXZlbnRzLm9mZihQaGFzZXJFdmVudHMuU0hVVERPV04sIHRoaXMuZGVzdHJveSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5zY2VuZS5ldmVudHMub2ZmKFBoYXNlckV2ZW50cy5ERVNUUk9ZLCB0aGlzLmRlc3Ryb3ksIHRoaXMpO1xyXG4gICAgICAgIGlmICh0aGlzLnNjZW5lLm1hdHRlci53b3JsZClcclxuICAgICAgICAgICAgdGhpcy5zY2VuZS5tYXR0ZXIud29ybGQub2ZmKFBoYXNlckV2ZW50cy5CRUZPUkVfVVBEQVRFLCB0aGlzLnJlc2V0VG91Y2hpbmcsIHRoaXMpO1xyXG4gICAgICAgIHRoaXMucmVtb3ZlQ29sbGlzaW9ucygpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5qdW1wVGltZXIpIHRoaXMuanVtcFRpbWVyLmRlc3Ryb3koKTtcclxuXHJcbiAgICAgICAgdGhpcy5zcHJpdGUuZGVzdHJveSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5kZXN0cm9lZCkgcmV0dXJuO1xyXG4gICAgICAgIGNvbnN0IHNwcml0ZSA9IHRoaXMuc3ByaXRlO1xyXG4gICAgICAgIGNvbnN0IHZlbG9jaXR5ID0gc3ByaXRlLmJvZHkudmVsb2NpdHk7XHJcbiAgICAgICAgY29uc3QgaXNSaWdodEtleURvd24gPSB0aGlzLmlucHV0LnJpZ2h0LmlzRG93bigpO1xyXG4gICAgICAgIGNvbnN0IGlzTGVmdEtleURvd24gPSB0aGlzLmlucHV0LmxlZnQuaXNEb3duKCk7XHJcbiAgICAgICAgY29uc3QgaXNKdW1wS2V5RG93biA9IHRoaXMuaW5wdXQudXAuaXNEb3duKCk7XHJcbiAgICAgICAgY29uc3QgaXNPbkdyb3VuZCA9IHRoaXMuaXNUb3VjaGluZy5ib3R0b207XHJcbiAgICAgICAgY29uc3QgbW92ZUZvcmNlID0gaXNPbkdyb3VuZCA/IDAuMDEgOiAwLjAwNztcclxuXHJcbiAgICAgICAgaWYgKGlzTGVmdEtleURvd24pIHtcclxuICAgICAgICAgICAgc3ByaXRlLnNldEZsaXBYKHRydWUpO1xyXG4gICAgICAgICAgICBzcHJpdGUuYXBwbHlGb3JjZShuZXcgUGhhc2VyLk1hdGguVmVjdG9yMigtbW92ZUZvcmNlLCAwKSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChpc1JpZ2h0S2V5RG93bikge1xyXG4gICAgICAgICAgICBzcHJpdGUuc2V0RmxpcFgoZmFsc2UpO1xyXG4gICAgICAgICAgICBzcHJpdGUuYXBwbHlGb3JjZShuZXcgUGhhc2VyLk1hdGguVmVjdG9yMihtb3ZlRm9yY2UsIDApKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh2ZWxvY2l0eS54ID4gNykge1xyXG4gICAgICAgICAgICBzcHJpdGUuc2V0VmVsb2NpdHlYKDcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodmVsb2NpdHkueCA8IC03KSB7XHJcbiAgICAgICAgICAgIHNwcml0ZS5zZXRWZWxvY2l0eVgoLTcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy90b2RvIGlmIHRoZSBwbGF5ZXIgaXMgbm90IHJlbGVhc2VkIHRoZSBkb3duIGJ1dHRvbiwgaGUgY2FuIGp1bXAgYWdhaW5cclxuICAgICAgICBpZiAoaXNKdW1wS2V5RG93biAmJiB0aGlzLmNhbkp1bXAgJiYgaXNPbkdyb3VuZCkge1xyXG4gICAgICAgICAgICBzcHJpdGUuc2V0VmVsb2NpdHlZKC0xMSk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FuSnVtcCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAvLyB0aGlzLmp1bXBUaW1lciA9IHRoaXMuc2NlbmUudGltZS5hZGRFdmVudCh7IGRlbGF5OiAyNTAsIGNhbGxiYWNrOiAoKSA9PiB0aGlzLmNhbkp1bXAgPSB0cnVlIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCFpc0p1bXBLZXlEb3duKSB0aGlzLmNhbkp1bXAgPSB0cnVlO1xyXG5cclxuICAgICAgICBpZiAoaXNPbkdyb3VuZCkge1xyXG4gICAgICAgICAgICBpZiAoKHNwcml0ZS5ib2R5IGFzIE1hdHRlckpTLkJvZHlUeXBlKS5mb3JjZS54ICE9PSAwKSBzcHJpdGUuYW5pbXMucGxheSh0aGlzLnNwcml0ZU5hbWUgKyAnLScgKyBBbmltU3RhdGUuUlVOLCB0cnVlKTtcclxuICAgICAgICAgICAgZWxzZSBzcHJpdGUuYW5pbXMucGxheSh0aGlzLnNwcml0ZU5hbWUgKyAnLScgKyBBbmltU3RhdGUuSURMRSwgdHJ1ZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc3ByaXRlLmFuaW1zLnN0b3AoKTtcclxuICAgICAgICAgICAgc3ByaXRlLnNldFRleHR1cmUodGhpcy5zcHJpdGVOYW1lLCAxMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5lbnVtIEFuaW1TdGF0ZSB7XHJcbiAgICBSVU4gPSAncnVuJyxcclxuICAgIElETEUgPSAnaWRsZSdcclxufVxyXG5leHBvcnQgaW50ZXJmYWNlIElTZW5zb3JzIHtcclxuICAgIG1haW46IE1hdHRlckpTLkJvZHlUeXBlLFxyXG4gICAgYm90dG9tOiBNYXR0ZXJKUy5Cb2R5VHlwZSxcclxuICAgIHRvcDogTWF0dGVySlMuQm9keVR5cGUsXHJcbiAgICBsZWZ0OiBNYXR0ZXJKUy5Cb2R5VHlwZSxcclxuICAgIHJpZ2h0OiBNYXR0ZXJKUy5Cb2R5VHlwZVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXVsdHlLZXlzIHtcclxuXHJcbiAgICBwdWJsaWMgdXA6IElNdWx0eUtleXM7XHJcbiAgICBwdWJsaWMgZG93bjogSU11bHR5S2V5cztcclxuICAgIHB1YmxpYyBsZWZ0OiBJTXVsdHlLZXlzO1xyXG4gICAgcHVibGljIHJpZ2h0OiBJTXVsdHlLZXlzO1xyXG4gICAgcHVibGljIGF0dGFjazogSU11bHR5S2V5cztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihzY2VuZTogUGhhc2VyLlNjZW5lLCBrZXlzOiBLZXlzKSB7XHJcbiAgICAgICAgT2JqZWN0LmtleXMoa2V5cykuZm9yRWFjaChrZXkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoa2V5c1trZXldKSkge1xyXG4gICAgICAgICAgICAgICAga2V5c1trZXldID0gW2tleXNba2V5XV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgcmVhZHlLZXlzID0ga2V5c1trZXldLm1hcChrZXlDb2RlID0+IHNjZW5lLmlucHV0LmtleWJvYXJkLmFkZEtleShrZXlDb2RlKSk7XHJcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHRoaXMuY3JlYXRlS2V5cyhyZWFkeUtleXMpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZUtleXMoa2V5czogUGhhc2VyLklucHV0LktleWJvYXJkLktleVtdKTogSU11bHR5S2V5cyB7XHJcbiAgICAgICAgY29uc3QgbXVsdHlLZXkgPSB7XHJcbiAgICAgICAgICAgIGlzRG93bjogKCkgPT4ga2V5cy5zb21lKGtleSA9PiBrZXkuaXNEb3duKSxcclxuICAgICAgICAgICAgaXNVcDogKCkgPT4ga2V5cy5ldmVyeShrZXkgPT4ga2V5LmlzVXApLFxyXG4gICAgICAgICAgICBrZXlzXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG11bHR5S2V5O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBpbnRlcmZhY2UgSU11bHR5S2V5cyB7XHJcbiAgICBpc0Rvd246ICgpID0+IGJvb2xlYW4sXHJcbiAgICBpc1VwOiAoKSA9PiBib29sZWFuLFxyXG4gICAga2V5czogUGhhc2VyLklucHV0LktleWJvYXJkLktleVtdXHJcbn1cclxuZXhwb3J0IGludGVyZmFjZSBLZXlzIHtcclxuICAgIHVwOiBudW1iZXIgfCBudW1iZXJbXTtcclxuICAgIGRvd24/OiBudW1iZXIgfCBudW1iZXJbXTtcclxuICAgIGxlZnQ6IG51bWJlciB8IG51bWJlcltdO1xyXG4gICAgcmlnaHQ6IG51bWJlciB8IG51bWJlcltdO1xyXG4gICAgYXR0YWNrPzogbnVtYmVyIHwgbnVtYmVyW107XHJcbn0iLCJpbXBvcnQgSUdhbWVDb25maWcsIHsgSUFuaW1TdGF0ZSB9IGZyb20gXCIuLi9pbnRlcmZhY2VzL0lHYW1lQ29uZmlnXCI7XHJcbmNvbnN0IGdhbWVDb25maWcgPSByZXF1aXJlKFwiLi4vLi4vZ2FtZS1jb25maWcuanNvblwiKTtcclxuXHJcbmNsYXNzIFV0aWxzIHtcclxuICAgIHB1YmxpYyBjcmVhdGVBbmltcyhzY2VuZTogUGhhc2VyLlNjZW5lLCBuYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBhbmltc05hbWUgPSBuYW1lICsgXCJBbmltc1wiXHJcbiAgICAgICAgY29uc3QgYW5pbUNvbmZpZyA9IChnYW1lQ29uZmlnIGFzIElHYW1lQ29uZmlnKVthbmltc05hbWVdO1xyXG4gICAgICAgIGNvbnN0IGFuaW1zID0gc2NlbmUuYW5pbXM7XHJcbiAgICAgICAgaWYgKGFuaW1Db25maWcgJiYgYW5pbXMpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgYW5pbSBpbiBhbmltQ29uZmlnKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB7IGtleSwgc3RhcnQsIGVuZCwgZnJhbWVSYXRlLCByZXBlYXQgfSA9IGFuaW1Db25maWdbYW5pbV0gYXMgSUFuaW1TdGF0ZTtcclxuICAgICAgICAgICAgICAgIGFuaW1zLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAga2V5LFxyXG4gICAgICAgICAgICAgICAgICAgIGZyYW1lczogYW5pbXMuZ2VuZXJhdGVGcmFtZU51bWJlcnMobmFtZSwgeyBzdGFydDogc3RhcnQsIGVuZDogZW5kIH0pLFxyXG4gICAgICAgICAgICAgICAgICAgIGZyYW1lUmF0ZSxcclxuICAgICAgICAgICAgICAgICAgICByZXBlYXRcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBVdGlscygpOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvdGF0aW5nUGxhdGZvcm0ge1xyXG4gICAgcHJvdGVjdGVkIHNjZW5lOiBQaGFzZXIuU2NlbmU7XHJcbiAgICBwcm90ZWN0ZWQgcGxhdGZvcm06IFBoYXNlci5HYW1lT2JqZWN0cy5UaWxlU3ByaXRlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOiBQaGFzZXIuU2NlbmUsIG5hbWU6IHN0cmluZywgeDogbnVtYmVyLCB5OiBudW1iZXIsIG51bVRpbGVzOiBudW1iZXIgPSA1KSB7XHJcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xyXG4gICAgICAgIHRoaXMucGxhdGZvcm0gPSBzY2VuZS5hZGQudGlsZVNwcml0ZSh4LCB5LCA2NCAqIG51bVRpbGVzLCAxOCwgbmFtZSk7XHJcblxyXG4gICAgICAgIHNjZW5lLm1hdHRlci5hZGQuZ2FtZU9iamVjdCh0aGlzLnBsYXRmb3JtLCB7IGZyaWN0aW9uOiAwLjIsIGZyaWN0aW9uQWlyOiAwLjA1LCByZXN0aXR1dGlvbjogMCwgZGVuc2l0eTogMC4wMDA1IH0pO1xyXG4gICAgICAgIGNvbnN0IE1hdHRlclBoeXNpY3MgPSBuZXcgUGhhc2VyLlBoeXNpY3MuTWF0dGVyLk1hdHRlclBoeXNpY3Moc2NlbmUpO1xyXG4gICAgICAgIGNvbnN0IGNvbnN0cmFpbnQgPSBNYXR0ZXJQaHlzaWNzLmNvbnN0cmFpbnQuY3JlYXRlKHtcclxuICAgICAgICAgICAgcG9pbnRBOiB7IHg6IHRoaXMucGxhdGZvcm0ueCwgeTogdGhpcy5wbGF0Zm9ybS55IH0sXHJcbiAgICAgICAgICAgIGJvZHlCOiB0aGlzLnBsYXRmb3JtLmJvZHkgYXMgTWF0dGVySlMuQm9keVR5cGUsXHJcbiAgICAgICAgICAgIGxlbmd0aDogMFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHNjZW5lLm1hdHRlci53b3JsZC5hZGQoY29uc3RyYWludCk7XHJcblxyXG4gICAgICAgIGNvbnN0IHNpZ24gPSBNYXRoLnJhbmRvbSgpIDwgMC41ID8gLTEgOiAxO1xyXG4gICAgICAgIGNvbnN0IGFuZ2xlID0gc2lnbiAqIFBoYXNlci5NYXRoLkJldHdlZW4oMTUsIDI1KTtcclxuICAgICAgICB0aGlzLnBsYXRmb3JtLnNldEFuZ2xlKGFuZ2xlKTtcclxuICAgIH1cclxufSIsImVudW0gSW1hZ2VLZXlzIHtcclxuICAgIFBMQVlFUiA9IFwicGxheWVyXCIsXHJcbiAgICBCTE9DSyA9IFwiYmxvY2tcIixcclxuICAgIFdPT0RFTl9QTEFOSyA9IFwid29vZGVuLXBsYW5rXCJcclxufVxyXG5leHBvcnQgZGVmYXVsdCBJbWFnZUtleXMiLCJlbnVtIFRpbGVLZXlzIHtcclxuICAgIE1BUCA9IFwibWFwXCIsXHJcbiAgICBUSUxFU0VUX0VYVFJVREVEID0gXCJ0aWxlc2V0LWV4dHJ1ZGVkXCIsXHJcbiAgICBTUEFXTiA9IFwiU3Bhd25cIixcclxuICAgIFNQQVdOX1BPSU5UID0gXCJTcGF3biBQb2ludFwiLFxyXG5cclxuICAgIENSQVRFUyA9IFwiQ3JhdGVzXCIsXHJcbiAgICBMQVZBID0gXCJMYXZhXCIsXHJcbiAgICBHUk9VTkQgPSBcIkdyb3VuZFwiLFxyXG4gICAgQkFDS0dST1VORCA9IFwiQmFja2dyb3VuZFwiLFxyXG4gICAgRk9SRUdST1VORCA9IFwiRm9yZWdyb3VuZFwiLFxyXG5cclxuICAgIFNFTlNPUlMgPSBcIlNlbnNvcnNcIixcclxuICAgIENFTEVCUtCQVElPTiA9IFwiQ2VsZWJyYXRpb25cIixcclxuXHJcbiAgICBQTEFURk9STV9MT0NBVElPTlMgPSBcIlBsYXRmb3JtIExvY2F0aW9uc1wiLFxyXG5cclxuICAgIFNXSU5HX0xPQ0FUSU9OUyA9IFwiU3dpbmcgTG9jYXRpb25zXCJcclxuXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgVGlsZUtleXMiLCJpbXBvcnQgUGhhc2VyRXZlbnRzIGZyb20gXCIuLi9jb25zdC9QaGFzZXJFdmVudHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1hdHRlckNvbGxpc2lvblBsdWdpbiBleHRlbmRzIFBoYXNlci5QbHVnaW5zLlNjZW5lUGx1Z2luIHtcclxuXHJcbiAgICBwcm90ZWN0ZWQgZXZlbnRzOiBQaGFzZXIuRXZlbnRzLkV2ZW50RW1pdHRlcjtcclxuICAgIHByb3RlY3RlZCBjb2xsaXNpb25TdGFydExpc3RlbmVyczogTWFwPFBoeXNpY3NPYmosIE9iamVjdEJDb250ZW50W10+O1xyXG4gICAgcHJvdGVjdGVkIGNvbGxpc2lvbkVuZExpc3RlbmVyczogTWFwPFBoeXNpY3NPYmosIE9iamVjdEJDb250ZW50W10+O1xyXG4gICAgcHJvdGVjdGVkIGNvbGxpc2lvbkFjdGl2ZUxpc3RlbmVyczogTWFwPFBoeXNpY3NPYmosIE9iamVjdEJDb250ZW50W10+O1xyXG4gICAgcHJvdGVjdGVkIG9uQ29sbGlzaW9uU3RhcnQ6ICgpID0+IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgb25Db2xsaXNpb25FbmQ6ICgpID0+IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgb25Db2xsaXNpb25BY3RpdmU6ICgpID0+IHZvaWQ7XHJcblxyXG4gICAgY29uc3RydWN0b3Ioc2NlbmU6IFBoYXNlci5TY2VuZSwgcGx1Z2luTWFuYWdlcjogUGhhc2VyLlBsdWdpbnMuUGx1Z2luTWFuYWdlcikge1xyXG4gICAgICAgIHN1cGVyKHNjZW5lLCBwbHVnaW5NYW5hZ2VyKTtcclxuXHJcbiAgICAgICAgdGhpcy5ldmVudHMgPSBuZXcgUGhhc2VyLkV2ZW50cy5FdmVudEVtaXR0ZXIoKTtcclxuICAgICAgICB0aGlzLmNvbGxpc2lvbkFjdGl2ZUxpc3RlbmVycyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmNvbGxpc2lvbkVuZExpc3RlbmVycyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmNvbGxpc2lvblN0YXJ0TGlzdGVuZXJzID0gbmV3IE1hcCgpO1xyXG5cclxuICAgICAgICB0aGlzLm9uQ29sbGlzaW9uU3RhcnQgPSB0aGlzLm9uQ29sbGlzaW9uRXZlbnQuYmluZCh0aGlzLCB0aGlzLmNvbGxpc2lvblN0YXJ0TGlzdGVuZXJzLCBQaGFzZXJFdmVudHMuQ09MTElTSU9OX1NUQVJUKTtcclxuICAgICAgICB0aGlzLm9uQ29sbGlzaW9uRW5kID0gdGhpcy5vbkNvbGxpc2lvbkV2ZW50LmJpbmQodGhpcywgdGhpcy5jb2xsaXNpb25FbmRMaXN0ZW5lcnMsIFBoYXNlckV2ZW50cy5DT0xMSVNJT05fRU5EKTtcclxuICAgICAgICB0aGlzLm9uQ29sbGlzaW9uQWN0aXZlID0gdGhpcy5vbkNvbGxpc2lvbkV2ZW50LmJpbmQodGhpcywgdGhpcy5jb2xsaXNpb25BY3RpdmVMaXN0ZW5lcnMsIFBoYXNlckV2ZW50cy5DT0xMSVNJT05fQUNUSVZFKTtcclxuXHJcbiAgICAgICAgLy8gdGhpcy5zY2VuZS5ldmVudHMub25jZShcInN0YXJ0XCIsIHRoaXMuc3RhcnQsIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuc2NlbmUuZXZlbnRzLm9uY2UoUGhhc2VyRXZlbnRzLkRFU1RST1ksIHRoaXMuZGVzdHJveSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5zdGFydCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGFydCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNjZW5lLmV2ZW50cy5vZmYoUGhhc2VyRXZlbnRzLlNIVVRET1dOLCB0aGlzLnNodXRkb3duLCB0aGlzKTtcclxuICAgICAgICB0aGlzLnNjZW5lLmV2ZW50cy5vbihQaGFzZXJFdmVudHMuU0hVVERPV04sIHRoaXMuc2h1dGRvd24sIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuc3Vic2NyaWJlUGhhc2VyRXZlbnRzKClcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2h1dGRvd24oKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVBbGxDb2xsaWRlckxpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmVQaGFzZXJFdmVudHMoKTtcclxuICAgICAgICB0aGlzLnNjZW5lLmV2ZW50cy5vbmNlKFBoYXNlckV2ZW50cy5TVEFSVCwgdGhpcy5zdGFydCwgdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZE9uQ29sbGlkZVN0YXJ0KG9iamVjdEE6IFBoeXNpY3NPYmpbXSwgb2JqZWN0QjogUGh5c2ljc09ialtdLCBjYWxsYmFjazogKGVkOiBFdmVudERhdGEpID0+IHZvaWQsIGNvbnRleHQ/OiBhbnkpOiAoKSA9PiB2b2lkIHtcclxuICAgICAgICB0aGlzLmFkZE9uQ29sbGlkZSh0aGlzLmNvbGxpc2lvblN0YXJ0TGlzdGVuZXJzLCBvYmplY3RBLCBvYmplY3RCLCBjYWxsYmFjaywgY29udGV4dCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVtb3ZlT25Db2xsaWRlU3RhcnQuYmluZCh0aGlzLCBvYmplY3RBLCBvYmplY3RCLCBjYWxsYmFjaywgY29udGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZE9uQ29sbGlkZUVuZChvYmplY3RBOiBQaHlzaWNzT2JqW10sIG9iamVjdEI6IFBoeXNpY3NPYmpbXSwgY2FsbGJhY2s6IChlZDogRXZlbnREYXRhKSA9PiB2b2lkLCBjb250ZXh0PzogYW55KTogKCkgPT4gdm9pZCB7XHJcbiAgICAgICAgdGhpcy5hZGRPbkNvbGxpZGUodGhpcy5jb2xsaXNpb25FbmRMaXN0ZW5lcnMsIG9iamVjdEEsIG9iamVjdEIsIGNhbGxiYWNrLCBjb250ZXh0KTtcclxuICAgICAgICByZXR1cm4gdGhpcy5yZW1vdmVPbkNvbGxpZGVFbmQuYmluZCh0aGlzLCBvYmplY3RBLCBvYmplY3RCLCBjYWxsYmFjaywgY29udGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZE9uQ29sbGlkZUFjdGl2ZShvYmplY3RBOiBQaHlzaWNzT2JqW10sIG9iamVjdEI6IFBoeXNpY3NPYmpbXSwgY2FsbGJhY2s6IChlZDogRXZlbnREYXRhKSA9PiB2b2lkLCBjb250ZXh0PzogYW55KTogKCkgPT4gdm9pZCB7XHJcbiAgICAgICAgdGhpcy5hZGRPbkNvbGxpZGUodGhpcy5jb2xsaXNpb25BY3RpdmVMaXN0ZW5lcnMsIG9iamVjdEEsIG9iamVjdEIsIGNhbGxiYWNrLCBjb250ZXh0KTtcclxuICAgICAgICByZXR1cm4gdGhpcy5yZW1vdmVPbkNvbGxpZGVBY3RpdmUuYmluZCh0aGlzLCBvYmplY3RBLCBvYmplY3RCLCBjYWxsYmFjaywgY29udGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZU9uQ29sbGlkZUFjdGl2ZShvYmplY3RBOiBQaHlzaWNzT2JqW10sIG9iamVjdEI6IFBoeXNpY3NPYmpbXSwgY2FsbGJhY2s6IChlZDogRXZlbnREYXRhKSA9PiB2b2lkLCBjb250ZXh0PzogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVPbkNvbGxpZGUodGhpcy5jb2xsaXNpb25BY3RpdmVMaXN0ZW5lcnMsIG9iamVjdEEsIG9iamVjdEIsIGNhbGxiYWNrLCBjb250ZXh0KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlT25Db2xsaWRlRW5kKG9iamVjdEE6IFBoeXNpY3NPYmpbXSwgb2JqZWN0QjogUGh5c2ljc09ialtdLCBjYWxsYmFjazogKGVkOiBFdmVudERhdGEpID0+IHZvaWQsIGNvbnRleHQ/OiBhbnkpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnJlbW92ZU9uQ29sbGlkZSh0aGlzLmNvbGxpc2lvbkVuZExpc3RlbmVycywgb2JqZWN0QSwgb2JqZWN0QiwgY2FsbGJhY2ssIGNvbnRleHQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyByZW1vdmVPbkNvbGxpZGVTdGFydChvYmplY3RBOiBQaHlzaWNzT2JqW10sIG9iamVjdEI6IFBoeXNpY3NPYmpbXSwgY2FsbGJhY2s6IChlZDogRXZlbnREYXRhKSA9PiB2b2lkLCBjb250ZXh0PzogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVPbkNvbGxpZGUodGhpcy5jb2xsaXNpb25TdGFydExpc3RlbmVycywgb2JqZWN0QSwgb2JqZWN0QiwgY2FsbGJhY2ssIGNvbnRleHQpO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zY2VuZS5ldmVudHMub2ZmKFBoYXNlckV2ZW50cy5TVEFSVCwgdGhpcy5zdGFydCwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5zY2VuZS5ldmVudHMub2ZmKFBoYXNlckV2ZW50cy5TSFVURE9XTiwgdGhpcy5zaHV0ZG93biwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVBbGxDb2xsaWRlckxpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmVQaGFzZXJFdmVudHMoKTtcclxuICAgICAgICB0aGlzLnNjZW5lID0gdW5kZWZpbmVkO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBvbkNvbGxpc2lvbkV2ZW50KGxpc3RlbmVyTWFwOiBNYXA8UGh5c2ljc09iaiwgT2JqZWN0QkNvbnRlbnRbXT4sIGV2ZW50TmFtZTogc3RyaW5nLCBldmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IHBhaXJzID0gZXZlbnQucGFpcnM7XHJcbiAgICAgICAgY29uc3QgcGFpckV2ZW50TmFtZSA9IFwicGFpclwiICsgZXZlbnROYW1lO1xyXG5cclxuICAgICAgICBwYWlycy5tYXAoKHBhaXIsIGkpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgeyBib2R5QSwgYm9keUIgfSA9IHBhaXI7XHJcblxyXG4gICAgICAgICAgICBsZXQgZ2FtZU9iamVjdEEgPSB0aGlzLmdldFJvb3RCb2R5KGJvZHlBKS5nYW1lT2JqZWN0O1xyXG4gICAgICAgICAgICBsZXQgZ2FtZU9iamVjdEIgPSB0aGlzLmdldFJvb3RCb2R5KGJvZHlCKS5nYW1lT2JqZWN0O1xyXG5cclxuICAgICAgICAgICAgaWYgKGdhbWVPYmplY3RBICYmIGdhbWVPYmplY3RBLnRpbGUpIGdhbWVPYmplY3RBID0gZ2FtZU9iamVjdEEudGlsZTtcclxuICAgICAgICAgICAgaWYgKGdhbWVPYmplY3RCICYmIGdhbWVPYmplY3RCLnRpbGUpIGdhbWVPYmplY3RCID0gZ2FtZU9iamVjdEIudGlsZTtcclxuXHJcbiAgICAgICAgICAgIHBhaXJzW2ldLmdhbWVPYmplY3RBID0gZ2FtZU9iamVjdEE7XHJcbiAgICAgICAgICAgIHBhaXJzW2ldLmdhbWVPYmplY3RCID0gZ2FtZU9iamVjdEI7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBldmVudERhdGE6IEV2ZW50RGF0YSA9IHsgYm9keUEsIGJvZHlCLCBnYW1lT2JqZWN0QSwgZ2FtZU9iamVjdEIsIHBhaXIgfTtcclxuICAgICAgICAgICAgdGhpcy5ldmVudHMuZW1pdChwYWlyRXZlbnROYW1lLCBldmVudERhdGEpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGxpc3RlbmVyTWFwLnNpemUpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50RGF0YVJldmVyc2VkOiBFdmVudERhdGEgPSB7IGJvZHlBOiBib2R5QiwgYm9keUI6IGJvZHlBLCBnYW1lT2JqZWN0QTogZ2FtZU9iamVjdEIsIGdhbWVPYmplY3RCOiBnYW1lT2JqZWN0QSwgcGFpciwgaXNSZXZlcnNlZDogdHJ1ZSB9XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGVjaFBhaXJBbmRFbWl0KGxpc3RlbmVyTWFwLCBib2R5QSwgYm9keUIsIGdhbWVPYmplY3RCLCBldmVudERhdGEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGVjaFBhaXJBbmRFbWl0KGxpc3RlbmVyTWFwLCBib2R5QiwgYm9keUEsIGdhbWVPYmplY3RBLCBldmVudERhdGFSZXZlcnNlZCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGdhbWVPYmplY3RBKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVjaFBhaXJBbmRFbWl0KGxpc3RlbmVyTWFwLCBnYW1lT2JqZWN0QSwgYm9keUIsIGdhbWVPYmplY3RCLCBldmVudERhdGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGdhbWVPYmplY3RCKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVjaFBhaXJBbmRFbWl0KGxpc3RlbmVyTWFwLCBnYW1lT2JqZWN0QiwgZ2FtZU9iamVjdEEsIGdhbWVPYmplY3RBLCBldmVudERhdGFSZXZlcnNlZClcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5ldmVudHMuZW1pdChldmVudE5hbWUsIGV2ZW50KTtcclxuXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgY2hlY2hQYWlyQW5kRW1pdChtYXA6IE1hcDxQaHlzaWNzT2JqLCBPYmplY3RCQ29udGVudFtdPiwgb2JqZWN0QTogUGh5c2ljc09iaiwgYm9keUI6IFBoeXNpY3NPYmosIGdhbWVPYmplY3RCOiBQaHlzaWNzT2JqLCBldmVudERhdGE6IEV2ZW50RGF0YSk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IGNhbGxiYWNrcyA9IG1hcC5nZXQob2JqZWN0QSk7XHJcbiAgICAgICAgaWYgKGNhbGxiYWNrcykge1xyXG4gICAgICAgICAgICBjYWxsYmFja3MuZm9yRWFjaCgoeyB0YXJnZXQsIGNvbnRleHQsIGNhbGxiYWNrIH0pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0IHx8IHRhcmdldCA9PT0gYm9keUIgfHwgdGFyZ2V0ID09PSBnYW1lT2JqZWN0Qikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb250ZXh0KSBjYWxsYmFjay5jYWxsKGNvbnRleHQsIGV2ZW50RGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBjYWxsYmFjayhldmVudERhdGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgcmVtb3ZlT25Db2xsaWRlKG1hcDogTWFwPFBoeXNpY3NPYmosIE9iamVjdEJDb250ZW50W10+LCBvYmplY3RBOiBQaHlzaWNzT2JqW10sIG9iamVjdEI6IFBoeXNpY3NPYmpbXSwgY2FsbGJhY2s6IChlZDogRXZlbnREYXRhKSA9PiB2b2lkLCBjb250ZXh0PzogYW55KTogdm9pZCB7XHJcbiAgICAgICAgb2JqZWN0QS5mb3JFYWNoKGEgPT4ge1xyXG4gICAgICAgICAgICBpZiAob2JqZWN0Qi5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIG1hcC5kZWxldGUoYSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFja3M6IE9iamVjdEJDb250ZW50W10gPSBtYXAuZ2V0KGEpIHx8IFtdO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVtYWluaW5nQ2FsbGJhY2tzID0gY2FsbGJhY2tzLmZpbHRlcihcclxuICAgICAgICAgICAgICAgICAgICBjYiA9PiAhKG9iamVjdEIuaW5jbHVkZXMoY2IudGFyZ2V0KSAmJiAoIWNhbGxiYWNrIHx8IGNiLmNhbGxiYWNrID09PSBjYWxsYmFjaykgJiYgKCFjb250ZXh0IHx8IGNiLmNvbnRleHQgPT09IGNvbnRleHQpKVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgIGlmIChyZW1haW5pbmdDYWxsYmFja3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcC5zZXQoYSwgcmVtYWluaW5nQ2FsbGJhY2tzKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFwLmRlbGV0ZShhKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGFkZE9uQ29sbGlkZShtYXA6IE1hcDxQaHlzaWNzT2JqLCBPYmplY3RCQ29udGVudFtdPiwgb2JqZWN0QTogUGh5c2ljc09ialtdLCBvYmplY3RCOiBQaHlzaWNzT2JqW10sIGNhbGxiYWNrOiAoZWQ6IEV2ZW50RGF0YSkgPT4gdm9pZCwgY29udGV4dD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIGlmIChvYmplY3RCLmxlbmd0aCA9PT0gMCkgb2JqZWN0Qi5wdXNoKHVuZGVmaW5lZCk7XHJcbiAgICAgICAgb2JqZWN0QS5mb3JFYWNoKGEgPT4ge1xyXG4gICAgICAgICAgICBvYmplY3RCLmZvckVhY2goYiA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE9uQ29sbGlkZU9iamVjdFZzT2JqZWN0KG1hcCwgYSwgYiwgY2FsbGJhY2ssIGNvbnRleHQpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGFkZE9uQ29sbGlkZU9iamVjdFZzT2JqZWN0KG1hcDogYW55LCBvYmplY3RBOiBQaHlzaWNzT2JqLCBvYmplY3RCOiBQaHlzaWNzT2JqLCBjYWxsYmFjazogKGVkOiBFdmVudERhdGEpID0+IHZvaWQsIGNvbnRleHQ/OiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBjYWxsYmFja3MgPSBtYXAuZ2V0KG9iamVjdEEpIHx8IFtdO1xyXG4gICAgICAgIGNhbGxiYWNrcy5wdXNoKHsgdGFyZ2V0OiBvYmplY3RCLCBjYWxsYmFjaywgY29udGV4dCB9KTtcclxuICAgICAgICBtYXAuc2V0KG9iamVjdEEsIGNhbGxiYWNrcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIHJlbW92ZUFsbENvbGxpZGVyTGlzdGVuZXJzKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29sbGlzaW9uU3RhcnRMaXN0ZW5lcnMuY2xlYXIoKTtcclxuICAgICAgICB0aGlzLmNvbGxpc2lvbkFjdGl2ZUxpc3RlbmVycy5jbGVhcigpO1xyXG4gICAgICAgIHRoaXMuY29sbGlzaW9uRW5kTGlzdGVuZXJzLmNsZWFyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIHN1YnNjcmliZVBoYXNlckV2ZW50cygpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBtYXR0ZXIgPSB0aGlzLnNjZW5lLm1hdHRlcjtcclxuICAgICAgICBpZiAoIW1hdHRlciB8fCAhbWF0dGVyLndvcmxkKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlBsdWdpbiByZXF1aXJlcyBtYXR0ZXIhXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG1hdHRlci53b3JsZC5vbihQaGFzZXJFdmVudHMuQ09MTElTSU9OX1NUQVJULCB0aGlzLm9uQ29sbGlzaW9uU3RhcnQpO1xyXG4gICAgICAgIG1hdHRlci53b3JsZC5vbihQaGFzZXJFdmVudHMuQ09MTElTSU9OX0VORCwgdGhpcy5vbkNvbGxpc2lvbkVuZCk7XHJcbiAgICAgICAgbWF0dGVyLndvcmxkLm9uKFBoYXNlckV2ZW50cy5DT0xMSVNJT05fQUNUSVZFLCB0aGlzLm9uQ29sbGlzaW9uQWN0aXZlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgdW5zdWJzY3JpYmVQaGFzZXJFdmVudHMoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3QgbWF0dGVyID0gdGhpcy5zY2VuZS5tYXR0ZXI7XHJcbiAgICAgICAgaWYgKCFtYXR0ZXIgfHwgIW1hdHRlci53b3JsZCkgcmV0dXJuO1xyXG4gICAgICAgIG1hdHRlci53b3JsZC5vZmYoUGhhc2VyRXZlbnRzLkNPTExJU0lPTl9TVEFSVCwgdGhpcy5vbkNvbGxpc2lvblN0YXJ0KTtcclxuICAgICAgICBtYXR0ZXIud29ybGQub2ZmKFBoYXNlckV2ZW50cy5DT0xMSVNJT05fRU5ELCB0aGlzLm9uQ29sbGlzaW9uRW5kKTtcclxuICAgICAgICBtYXR0ZXIud29ybGQub2ZmKFBoYXNlckV2ZW50cy5DT0xMSVNJT05fQUNUSVZFLCB0aGlzLm9uQ29sbGlzaW9uQWN0aXZlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgZ2V0Um9vdEJvZHkoYm9keSkge1xyXG4gICAgICAgIHdoaWxlIChib2R5LnBhcmVudCAhPSBib2R5KSB7XHJcbiAgICAgICAgICAgIGJvZHkgPSBib2R5LnBhcmVudDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGJvZHk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIFBoeXNpY3NPYmogPSBQaGFzZXIuVHlwZXMuUGh5c2ljcy5NYXR0ZXIuTWF0dGVyQm9keTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgT2JqZWN0QkNvbnRlbnQge1xyXG4gICAgdGFyZ2V0OiBQaHlzaWNzT2JqLFxyXG4gICAgY2FsbGJhY2s6IChldmVudERhdGE6IEV2ZW50RGF0YSkgPT4gdm9pZCxcclxuICAgIGNvbnRleHQ/OiBhbnlcclxufVxyXG5leHBvcnQgaW50ZXJmYWNlIEV2ZW50RGF0YSB7XHJcbiAgICBib2R5QTogTWF0dGVySlMuQm9keVR5cGUsXHJcbiAgICBib2R5QjogTWF0dGVySlMuQm9keVR5cGUsXHJcbiAgICBnYW1lT2JqZWN0QTogUGh5c2ljc09iaixcclxuICAgIGdhbWVPYmplY3RCOiBQaHlzaWNzT2JqLFxyXG4gICAgcGFpcjogUGhhc2VyLlR5cGVzLlBoeXNpY3MuTWF0dGVyLk1hdHRlckNvbGxpc2lvblBhaXIsXHJcbiAgICBpc1JldmVyc2VkPzogYm9vbGVhblxyXG59IiwiaW1wb3J0IFNjZW5lS2V5cyBmcm9tIFwiLi4vY29uc3QvU2NlbmVLZXlzXCI7XHJcbmltcG9ydCBMb2NhbFRleHRzIGZyb20gXCIuLi9jb25zdC9Mb2NhbFRleHRzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lbnVTY2VuZSBleHRlbmRzIFBoYXNlci5TY2VuZSB7XHJcblxyXG4gICAgcHJvdGVjdGVkIGJnOiBQaGFzZXIuR2FtZU9iamVjdHMuVGlsZVNwcml0ZTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcih7IGtleTogU2NlbmVLZXlzLk1FTlVfU0NFTkUgfSlcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5iZyA9IHRoaXMuYWRkLnRpbGVTcHJpdGUoMCwgMCwgdGhpcy5zeXMuY2FudmFzLndpZHRoLCB0aGlzLnN5cy5jYW52YXMuaGVpZ2h0LCBcImJhY2tncm91bmRcIikuc2V0T3JpZ2luKDApO1xyXG5cclxuICAgICAgICBjb25zdCBzdHlsZSA9IHsgZm9udDogXCIzMHB4IEFyaWFsXCIsIGZpbGw6IFwiI2ZmZlwiLCBhbGlnbjogXCJjZW50ZXJcIiB9O1xyXG4gICAgICAgIGNvbnN0IGZpZWxkID0gdGhpcy5hZGQudGV4dCgwLCAwLCBMb2NhbFRleHRzLlRBUF9UT19QTEFZLCBzdHlsZSk7XHJcbiAgICAgICAgZmllbGQuc2V0UG9zaXRpb24oKHRoaXMuc3lzLmNhbnZhcy53aWR0aCAvIDIpIC0gKGZpZWxkLndpZHRoKSAvIDIsICh0aGlzLnN5cy5jYW52YXMuaGVpZ2h0IC8gMikgLSAoZmllbGQuaGVpZ2h0KSAvIDIpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5pbnB1dC5hY3RpdmVQb2ludGVyLmlzRG93bikge1xyXG4gICAgICAgICAgICB0aGlzLnNjZW5lLnN0YXJ0KFNjZW5lS2V5cy5HQU1FX1NDRU5FKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5iZy50aWxlUG9zaXRpb25ZIC09IC41O1xyXG5cclxuICAgICAgICB0aGlzLnNjZW5lLnN0YXJ0KFNjZW5lS2V5cy5HQU1FX1NDRU5FKS8vdGhpcyBzaG91bGQgYmUgcmVtb3ZlZCB3aGVuIHdlIGhhdmUgc29tZXRoaW5nIGluIHRoZSBtZW51IHNjZW5lXHJcbiAgICB9XHJcbn0iLCJlbnVtIExvY2FsVGV4dHMge1xyXG4gICAgTE9BRElOR19DT01QTEVURSA9IFwiTG9hZGluZyBjb21wbGV0ZVwiLFxyXG4gICAgVEFQX1RPX1BMQVkgPSBcIlRhcCB0byBwbGF5XCIsXHJcbiAgICBISUdIX1NDT1JFID0gXCJIaWdoIHNjb3JlXCJcclxufVxyXG5leHBvcnQgZGVmYXVsdCBMb2NhbFRleHRzIiwiaW1wb3J0IExvY2FsVGV4dHMgZnJvbSBcIi4uL2NvbnN0L0xvY2FsVGV4dHNcIjtcclxuaW1wb3J0IFNjZW5lS2V5cyBmcm9tIFwiLi4vY29uc3QvU2NlbmVLZXlzXCI7XHJcbmltcG9ydCBSZXNvdXJjZUxvYWRlciBmcm9tIFwiLi4vdXRpbHMvUmVzb3VyY2VMb2FkZXJcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByZWxvYWRTY2VuZSBleHRlbmRzIFBoYXNlci5TY2VuZSB7XHJcblxyXG4gICAgcHJvdGVjdGVkIGxvYWRpbmdCYXI6IFBoYXNlci5HYW1lT2JqZWN0cy5TcHJpdGU7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoeyBrZXk6IFNjZW5lS2V5cy5QUkVMT0FEX1NDRU5FIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHJlbG9hZCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmxvYWRpbmdCYXIgPSB0aGlzLmFkZC5zcHJpdGUoMCwgMCwgJ2xvYWRpbmdCYXInKS5zZXRPcmlnaW4oMCwgMCk7XHJcbiAgICAgICAgUGhhc2VyLkRpc3BsYXkuQWxpZ24uSW4uQ2VudGVyKFxyXG4gICAgICAgICAgICB0aGlzLmxvYWRpbmdCYXIsXHJcbiAgICAgICAgICAgIHRoaXMuYWRkLnpvbmUodGhpcy5zeXMuY2FudmFzLndpZHRoIC8gMiwgdGhpcy5zeXMuY2FudmFzLmhlaWdodCAvIDIsIHRoaXMuc3lzLmNhbnZhcy53aWR0aCwgdGhpcy5zeXMuY2FudmFzLmhlaWdodClcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICB0aGlzLmxvYWQub24oJ3Byb2dyZXNzJywgdmFsdWUgPT4gdGhpcy5sb2FkaW5nQmFyLnNldFNjYWxlKHZhbHVlLCAxKS5zZXRPcmlnaW4oMCwgMCkpO1xyXG5cclxuICAgICAgICBSZXNvdXJjZUxvYWRlci5sb2FkKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNjZW5lLnN0YXJ0KFNjZW5lS2V5cy5NRU5VX1NDRU5FKTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=